{"version":3,"file":"angular-count-to.umd.js","sources":["../../src/directives/count-to.directive.ts","../../src/modules/count-to.module.ts"],"names":["Directive","ElementRef","Input","NgModule"],"mappings":"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","sourcesContent":["import { Directive, OnChanges, ElementRef, Input, OnInit } from '@angular/core';\nexport class CountToDirective implements OnChanges, OnInit {\n  \n  CountTo: number;\n  \n  from = 0;\n  \n  duration = 4;\n\n  e = this.el.nativeElement;\n  num: number;\n  refreshInterval = 30;\n  steps: number;\n  step = 0;\n  increment: number;\n/**\n * @param {?} el\n */\nconstructor(private el: ElementRef) {\n\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n\n  }\n/**\n * @return {?}\n */\nngOnChanges() {\n    if (this.CountTo) {\n      this.start();\n    }\n  }\n/**\n * @return {?}\n */\ncalculate() {\n    this.duration = this.duration * 1000;\n\n    this.steps = Math.ceil(this.duration / this.refreshInterval);\n    this.increment = ((this.CountTo - this.from) / this.steps);\n    this.num = this.from;\n  }\n/**\n * @return {?}\n */\ntick() {\n    setTimeout(() => {\n      this.num += this.increment;\n      this.step++;\n      if (this.step >= this.steps) {\n        this.num = this.CountTo;\n        this.e.textContent = this.CountTo;\n      } else {\n        this.e.textContent = Math.round(this.num);\n        this.tick();\n      }\n    }, this.refreshInterval);\n  }\n/**\n * @return {?}\n */\nstart() {\n    this.calculate();\n    this.tick();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[CountTo]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'CountTo': [{ type: Input },],\n'from': [{ type: Input },],\n'duration': [{ type: Input },],\n};\n}\n\nfunction CountToDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nCountToDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCountToDirective.ctorParameters;\n/** @type {?} */\nCountToDirective.propDecorators;\n/** @type {?} */\nCountToDirective.prototype.CountTo;\n/** @type {?} */\nCountToDirective.prototype.from;\n/** @type {?} */\nCountToDirective.prototype.duration;\n/** @type {?} */\nCountToDirective.prototype.e;\n/** @type {?} */\nCountToDirective.prototype.num;\n/** @type {?} */\nCountToDirective.prototype.refreshInterval;\n/** @type {?} */\nCountToDirective.prototype.steps;\n/** @type {?} */\nCountToDirective.prototype.step;\n/** @type {?} */\nCountToDirective.prototype.increment;\n/** @type {?} */\nCountToDirective.prototype.el;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { CountToDirective } from './../directives/count-to.directive';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nexport class CountToModule {\n/**\n * Use in AppModule\n * @return {?}\n */\npublic static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: CountToModule,\n            providers: []\n        };\n    }\n/**\n * Use in features modules with lazy loading\n * @return {?}\n */\npublic static forChild(): ModuleWithProviders {\n        return {\n            ngModule: CountToModule,\n            providers: []\n        };\n    }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [\n        CountToDirective\n        // Pipes.\n        // Directives.\n    ],\n    exports: [\n        CountToDirective\n        // Pipes.\n        // Directives.\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CountToModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCountToModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCountToModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}