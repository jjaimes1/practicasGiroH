import * as ɵngcc0 from '@angular/core';
var NgxYoutubePlayerModule_1;
import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { YoutubePlayerComponent } from './ngx-youtube-player.component';
import { YoutubePlayerService } from './ngx-youtube-player.service';
let NgxYoutubePlayerModule = NgxYoutubePlayerModule_1 = class NgxYoutubePlayerModule {
    static forRoot() {
        return {
            ngModule: NgxYoutubePlayerModule_1,
            providers: [YoutubePlayerService]
        };
    }
};
NgxYoutubePlayerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxYoutubePlayerModule });
NgxYoutubePlayerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxYoutubePlayerModule_Factory(t) { return new (t || NgxYoutubePlayerModule)(); }, providers: [YoutubePlayerService], imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxYoutubePlayerModule, { declarations: function () { return [YoutubePlayerComponent]; }, exports: function () { return [YoutubePlayerComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxYoutubePlayerModule, [{
        type: NgModule,
        args: [{
                declarations: [YoutubePlayerComponent],
                imports: [],
                providers: [YoutubePlayerService],
                exports: [YoutubePlayerComponent]
            }]
    }], null, null); })();
export { NgxYoutubePlayerModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXlvdXR1YmUtcGxheWVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXlvdXR1YmUtcGxheWVyL3NyYy9saWIvbmd4LXlvdXR1YmUtcGxheWVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUF1QixNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQztBQUN4RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQVFwRSxJQUFhLHNCQUFzQiw4QkFBbkMsTUFBYSxzQkFBc0I7QUFDbkMsSUFBRSxNQUFNLENBQUMsT0FBTztBQUFLLFFBQ2pCLE9BQU87QUFDWCxZQUFNLFFBQVEsRUFBRSx3QkFBc0I7QUFDdEMsWUFBTSxTQUFTLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQztBQUN2QyxTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7QUFDSCxDQUFDLENBQUE7QUFQWSxzQkFBc0IsK0NBTmxDLFFBQVEsQ0FBQyxVQUNSO1dBQVksRUFBRSxDQUFDLHNCQUFzQixDQUFDLFVBQ3RDLE9BQU8sRUFBRSxFQUFFLFVBQ1gsU0FBUyxFQUFFLENBQUMsb0JBQW9CLENBQUMsVUFDakMsT0FBTyxFQUFFLENBQUMsc0JBQXNCLENBQUMsTUFDbEMsQ0FBQyxJQUNXLHNCQUFzQixDQU9sQzs7Ozs7Ozs7OzswQkFDRDs7QUFsQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBUUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFQQSxBQUFBLEFBTkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQU9BLEFBUEEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBZb3V0dWJlUGxheWVyQ29tcG9uZW50IH0gZnJvbSAnLi9uZ3gteW91dHViZS1wbGF5ZXIuY29tcG9uZW50JztcbmltcG9ydCB7IFlvdXR1YmVQbGF5ZXJTZXJ2aWNlIH0gZnJvbSAnLi9uZ3gteW91dHViZS1wbGF5ZXIuc2VydmljZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1lvdXR1YmVQbGF5ZXJDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbXSxcbiAgcHJvdmlkZXJzOiBbWW91dHViZVBsYXllclNlcnZpY2VdLFxuICBleHBvcnRzOiBbWW91dHViZVBsYXllckNvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgTmd4WW91dHViZVBsYXllck1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Tmd4WW91dHViZVBsYXllck1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4WW91dHViZVBsYXllck1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1lvdXR1YmVQbGF5ZXJTZXJ2aWNlXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==