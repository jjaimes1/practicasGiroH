/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class ModalOptions {
}
ModalOptions.ɵfac = function ModalOptions_Factory(t) { return new (t || ModalOptions)(); };
ModalOptions.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ModalOptions, factory: ModalOptions.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ModalOptions, [{
        type: Injectable
    }], null, null); })();
if (false) {
    /**
     *  Includes a modal-backdrop element. Alternatively, specify static for a backdrop which doesn't close the modal on click.
     * @type {?}
     */
    ModalOptions.prototype.backdrop;
    /**
     * Closes the modal when escape key is pressed.
     * @type {?}
     */
    ModalOptions.prototype.keyboard;
    /** @type {?} */
    ModalOptions.prototype.focus;
    /**
     * Shows the modal when initialized.
     * @type {?}
     */
    ModalOptions.prototype.show;
    /**
     * Ignore the backdrop click
     * @type {?}
     */
    ModalOptions.prototype.ignoreBackdropClick;
    /**
     * Css class for opened modal
     * @type {?}
     */
    ModalOptions.prototype.class;
    /**
     * Toggle animation
     * @type {?}
     */
    ModalOptions.prototype.containerClass;
    /** @type {?} */
    ModalOptions.prototype.animated;
    /** @type {?} */
    ModalOptions.prototype.scroll;
    /** @type {?} */
    ModalOptions.prototype.data;
}
export class MDBModalRef {
    /**
     * Hides the modal
     * @return {?}
     */
    hide() { }
}
MDBModalRef.ɵfac = function MDBModalRef_Factory(t) { return new (t || MDBModalRef)(); };
MDBModalRef.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MDBModalRef, factory: MDBModalRef.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MDBModalRef, [{
        type: Injectable
    }], null, null); })();
if (false) {
    /**
     * Reference to a component inside the modal. Null if modal's been created with TemplateRef
     * @type {?}
     */
    MDBModalRef.prototype.content;
}
const ɵ0 = {};
/** @type {?} */
export const modalConfigDefaults = {
    backdrop: true,
    keyboard: true,
    focus: true,
    show: false,
    ignoreBackdropClick: false,
    class: '',
    containerClass: '',
    animated: true,
    scroll: false,
    data: ɵ0,
};
/** @type {?} */
export const ClassName = {
    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',
    BACKDROP: 'modal-backdrop',
    OPEN: 'modal-open',
    FADE: 'fade',
    IN: 'in',
    // bs3
    SHOW: 'show',
};
/** @type {?} */
export const Selector = {
    DIALOG: '.modal-dialog',
    DATA_TOGGLE: '[data-toggle="modal"]',
    DATA_DISMISS: '[data-dismiss="modal"]',
    FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed',
};
/** @type {?} */
export const TransitionDurations = {
    MODAL: 300,
    BACKDROP: 150,
};
/** @type {?} */
export const DISMISS_REASONS = {
    BACKRDOP: 'backdrop-click',
    ESC: 'esc',
};
export { ɵ0 };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwub3B0aW9ucy5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9mcmVlL21vZGFscy9tb2RhbC5vcHRpb25zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUczQyxNQUFNLE9BQU8sWUFBWTtBQUN6Qjt3Q0FGQyxVQUFVOzs7OzBCQUNUO0FBQUM7QUFBYTtBQUFRO0FBRThGO0FBRW5IO0FBQVEsSUFBVCxnQ0FBb0M7QUFDdEM7QUFDRTtBQUNFO0FBQ1c7QUFFZixJQUZFLGdDQUFtQjtBQUNyQjtBQUVDLElBREMsNkJBQWdCO0FBQ2xCO0FBQ0U7QUFDRTtBQUNXO0FBQ1YsSUFESCw0QkFBZTtBQUNqQjtBQUNFO0FBQ0U7QUFDVztBQUFRLElBQXJCLDJDQUE4QjtBQUNoQztBQUNFO0FBQ0U7QUFDVztBQUNWLElBREgsNkJBQWU7QUFDakI7QUFDRTtBQUNFO0FBQ1c7QUFBUSxJQUFyQixzQ0FBd0I7QUFDMUI7QUFBcUIsSUFBbkIsZ0NBQW1CO0FBQ3JCO0FBQ0MsSUFEQyw4QkFBaUI7QUFDbkI7QUFHQyxJQUhDLDRCQUFjO0FBQ2hCO0FBR0EsTUFBTSxPQUFPLFdBQVc7QUFDeEI7QUFDRTtBQUF1QjtBQUFtQjtBQUFRLElBTWxELElBQUksS0FBVSxDQUFDO0FBQ2pCO3VDQVZDLFVBQVU7Ozs7MEJBQ1Q7QUFBQztBQUFhO0FBQVE7QUFFK0Q7QUFFbkY7QUFBUSxJQUFWLDhCQUFxQjtBQUN2QjtBQUFFLFdBZ0JNLEVBQUU7QUFDVjtBQVhBLE1BQU0sT0FBTyxtQkFBbUIsR0FBaUI7QUFDakQsSUFBRSxRQUFRLEVBQUUsSUFBSTtBQUNoQixJQUFFLFFBQVEsRUFBRSxJQUFJO0FBQ2hCLElBQUUsS0FBSyxFQUFFLElBQUk7QUFDYixJQUFFLElBQUksRUFBRSxLQUFLO0FBQ2IsSUFBRSxtQkFBbUIsRUFBRSxLQUFLO0FBQzVCLElBQUUsS0FBSyxFQUFFLEVBQUU7QUFDWCxJQUFFLGNBQWMsRUFBRSxFQUFFO0FBQ3BCLElBQUUsUUFBUSxFQUFFLElBQUk7QUFDaEIsSUFBRSxNQUFNLEVBQUUsS0FBSztBQUNmLElBQUUsSUFBSSxJQUFJO0FBQ1YsQ0FBQztBQUNEO0FBQ0EsTUFBTSxPQUFPLFNBQVMsR0FBUTtBQUM5QixJQUFFLGtCQUFrQixFQUFFLHlCQUF5QjtBQUMvQyxJQUFFLFFBQVEsRUFBRSxnQkFBZ0I7QUFDNUIsSUFBRSxJQUFJLEVBQUUsWUFBWTtBQUNwQixJQUFFLElBQUksRUFBRSxNQUFNO0FBQ2QsSUFBRSxFQUFFLEVBQUUsSUFBSTtBQUFFO0FBQ1IsSUFBRixJQUFJLEVBQUUsTUFBTTtBQUFFLENBQ2Y7QUFDRDtBQUNBLE1BQU0sT0FBTyxRQUFRLEdBQVE7QUFDN0IsSUFBRSxNQUFNLEVBQUUsZUFBZTtBQUN6QixJQUFFLFdBQVcsRUFBRSx1QkFBdUI7QUFDdEMsSUFBRSxZQUFZLEVBQUUsd0JBQXdCO0FBQ3hDLElBQUUsYUFBYSxFQUFFLG9EQUFvRDtBQUNyRSxDQUFDO0FBQ0Q7QUFDQSxNQUFNLE9BQU8sbUJBQW1CLEdBQVE7QUFDeEMsSUFBRSxLQUFLLEVBQUUsR0FBRztBQUNaLElBQUUsUUFBUSxFQUFFLEdBQUc7QUFDZixDQUFDO0FBQ0Q7QUFDQSxNQUFNLE9BQU8sZUFBZSxHQUFHO0FBQy9CLElBQUUsUUFBUSxFQUFFLGdCQUFnQjtBQUM1QixJQUFFLEdBQUcsRUFBRSxLQUFLO0FBQ1osQ0FBQzs7QUFwRkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBREEsQUFBQSxBQUtBLEFBQUEsQUFJQSxBQUFBLEFBRUEsQUFBQSxBQUlBLEFBQUEsQUFJQSxBQUFBLEFBSUEsQUFBQSxBQUlBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFJQSxBQUFBLEFBQUEsQUFBQSxBQVFBLEFBQUEsQUFBQSxBQUFBLEFBVEEsQUFBQSxBQUtBLEFBQUEsQUFpQkEsQUFBQSxBQVZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBNb2RhbE9wdGlvbnMge1xuICAvKipcbiAgICogIEluY2x1ZGVzIGEgbW9kYWwtYmFja2Ryb3AgZWxlbWVudC4gQWx0ZXJuYXRpdmVseSwgc3BlY2lmeSBzdGF0aWMgZm9yIGEgYmFja2Ryb3Agd2hpY2ggZG9lc24ndCBjbG9zZSB0aGUgbW9kYWwgb24gY2xpY2suXG4gICAqL1xuICBiYWNrZHJvcD86IGJvb2xlYW4gfCAnc3RhdGljJyB8IGFueTtcbiAgLyoqXG4gICAqIENsb3NlcyB0aGUgbW9kYWwgd2hlbiBlc2NhcGUga2V5IGlzIHByZXNzZWQuXG4gICAqL1xuICBrZXlib2FyZD86IGJvb2xlYW47XG5cbiAgZm9jdXM/OiBib29sZWFuO1xuICAvKipcbiAgICogU2hvd3MgdGhlIG1vZGFsIHdoZW4gaW5pdGlhbGl6ZWQuXG4gICAqL1xuICBzaG93PzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIElnbm9yZSB0aGUgYmFja2Ryb3AgY2xpY2tcbiAgICovXG4gIGlnbm9yZUJhY2tkcm9wQ2xpY2s/OiBib29sZWFuO1xuICAvKipcbiAgICogQ3NzIGNsYXNzIGZvciBvcGVuZWQgbW9kYWxcbiAgICovXG4gIGNsYXNzPzogc3RyaW5nO1xuICAvKipcbiAgICogVG9nZ2xlIGFuaW1hdGlvblxuICAgKi9cbiAgY29udGFpbmVyQ2xhc3M/OiBzdHJpbmc7XG4gIGFuaW1hdGVkPzogYm9vbGVhbjtcbiAgc2Nyb2xsPzogYm9vbGVhbjtcbiAgZGF0YT86IE9iamVjdDtcbn1cblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE1EQk1vZGFsUmVmIHtcbiAgLyoqXG4gICAqIFJlZmVyZW5jZSB0byBhIGNvbXBvbmVudCBpbnNpZGUgdGhlIG1vZGFsLiBOdWxsIGlmIG1vZGFsJ3MgYmVlbiBjcmVhdGVkIHdpdGggVGVtcGxhdGVSZWZcbiAgICovXG4gIGNvbnRlbnQ/OiBhbnkgfCBudWxsO1xuICAvKipcbiAgICogSGlkZXMgdGhlIG1vZGFsXG4gICAqL1xuICBoaWRlKCk6IHZvaWQge31cbn1cblxuZXhwb3J0IGNvbnN0IG1vZGFsQ29uZmlnRGVmYXVsdHM6IE1vZGFsT3B0aW9ucyA9IHtcbiAgYmFja2Ryb3A6IHRydWUsXG4gIGtleWJvYXJkOiB0cnVlLFxuICBmb2N1czogdHJ1ZSxcbiAgc2hvdzogZmFsc2UsXG4gIGlnbm9yZUJhY2tkcm9wQ2xpY2s6IGZhbHNlLFxuICBjbGFzczogJycsXG4gIGNvbnRhaW5lckNsYXNzOiAnJyxcbiAgYW5pbWF0ZWQ6IHRydWUsXG4gIHNjcm9sbDogZmFsc2UsXG4gIGRhdGE6IHt9LFxufTtcblxuZXhwb3J0IGNvbnN0IENsYXNzTmFtZTogYW55ID0ge1xuICBTQ1JPTExCQVJfTUVBU1VSRVI6ICdtb2RhbC1zY3JvbGxiYXItbWVhc3VyZScsXG4gIEJBQ0tEUk9QOiAnbW9kYWwtYmFja2Ryb3AnLFxuICBPUEVOOiAnbW9kYWwtb3BlbicsXG4gIEZBREU6ICdmYWRlJyxcbiAgSU46ICdpbicsIC8vIGJzM1xuICBTSE9XOiAnc2hvdycsIC8vIGJzNFxufTtcblxuZXhwb3J0IGNvbnN0IFNlbGVjdG9yOiBhbnkgPSB7XG4gIERJQUxPRzogJy5tb2RhbC1kaWFsb2cnLFxuICBEQVRBX1RPR0dMRTogJ1tkYXRhLXRvZ2dsZT1cIm1vZGFsXCJdJyxcbiAgREFUQV9ESVNNSVNTOiAnW2RhdGEtZGlzbWlzcz1cIm1vZGFsXCJdJyxcbiAgRklYRURfQ09OVEVOVDogJy5uYXZiYXItZml4ZWQtdG9wLCAubmF2YmFyLWZpeGVkLWJvdHRvbSwgLmlzLWZpeGVkJyxcbn07XG5cbmV4cG9ydCBjb25zdCBUcmFuc2l0aW9uRHVyYXRpb25zOiBhbnkgPSB7XG4gIE1PREFMOiAzMDAsXG4gIEJBQ0tEUk9QOiAxNTAsXG59O1xuXG5leHBvcnQgY29uc3QgRElTTUlTU19SRUFTT05TID0ge1xuICBCQUNLUkRPUDogJ2JhY2tkcm9wLWNsaWNrJyxcbiAgRVNDOiAnZXNjJyxcbn07XG4iXX0=