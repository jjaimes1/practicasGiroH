/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class ProgressbarConfigComponent {
    constructor() {
        /**
         * if `true` changing value of progress bar will be animated (note: not supported by Bootstrap 4)
         */
        this.animate = true;
        /**
         * maximum total value of progress element
         */
        this.max = 100;
    }
}
ProgressbarConfigComponent.ɵfac = function ProgressbarConfigComponent_Factory(t) { return new (t || ProgressbarConfigComponent)(); };
ProgressbarConfigComponent.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ProgressbarConfigComponent, factory: ProgressbarConfigComponent.ɵfac });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ProgressbarConfigComponent, [{
        type: Injectable
    }], function () { return []; }, null); })();
if (false) {
    /**
     * if `true` changing value of progress bar will be animated (note: not supported by Bootstrap 4)
     * @type {?}
     */
    ProgressbarConfigComponent.prototype.animate;
    /**
     * maximum total value of progress element
     * @type {?}
     */
    ProgressbarConfigComponent.prototype.max;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3NiYXIuY29uZmlnLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9wcm8vcHJvZ3Jlc3NiYXJzL3Byb2dyZXNzYmFyLmNvbmZpZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBRzNDLE1BQU0sT0FBTywwQkFBMEI7QUFDdkMsSUFGQTtBQUNFO0FBQVk7QUFDZ0U7QUFBWSxRQUNqRixZQUFPLEdBQVksSUFBSSxDQUFDO0FBQ2pDO0FBQVk7QUFDRTtBQUVWLFFBRkssUUFBRyxHQUFHLEdBQUcsQ0FBQztBQUNuQixJQUFBLENBQUM7QUFDRDtzREFQQyxVQUFVOzs7O2dEQUNUO0FBQUM7QUFBYTtBQUFRO0FBQzREO0FBQWlCO0FBQ2hHLElBQUgsNkNBQStCO0FBQ2pDO0FBQVE7QUFDRjtBQUVMO0FBQVEsSUFGUCx5Q0FBaUI7O0FBUEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFBQSxBQUFBLEFBREEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFOQSxBQUFBLEFBR0EsQUFBQSxBQUVBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBQcm9ncmVzc2JhckNvbmZpZ0NvbXBvbmVudCB7XG4gIC8qKiBpZiBgdHJ1ZWAgY2hhbmdpbmcgdmFsdWUgb2YgcHJvZ3Jlc3MgYmFyIHdpbGwgYmUgYW5pbWF0ZWQgKG5vdGU6IG5vdCBzdXBwb3J0ZWQgYnkgQm9vdHN0cmFwIDQpICovXG4gIHB1YmxpYyBhbmltYXRlOiBCb29sZWFuID0gdHJ1ZTtcbiAgLyoqIG1heGltdW0gdG90YWwgdmFsdWUgb2YgcHJvZ3Jlc3MgZWxlbWVudCAqL1xuICBwdWJsaWMgbWF4ID0gMTAwO1xufVxuIl19