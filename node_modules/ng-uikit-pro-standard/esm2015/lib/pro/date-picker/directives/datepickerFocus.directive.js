/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export class FocusDirective {
    /**
     * @param {?} el
     */
    constructor(el) {
        this.el = el;
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.el.nativeElement.focus();
    }
}
FocusDirective.ɵfac = function FocusDirective_Factory(t) { return new (t || FocusDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FocusDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FocusDirective, selectors: [["", "mdbDpFocus", ""]], inputs: { value: "value" } });
/** @nocollapse */
FocusDirective.ctorParameters = () => [
    { type: ElementRef }
];
FocusDirective.propDecorators = {
    value: [{ type: Input }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusDirective, [{
        type: Directive,
        args: [{
                selector: '[mdbDpFocus]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { value: [{
            type: Input
        }] }); })();
if (false) {
    /** @type {?} */
    FocusDirective.prototype.value;
    /**
     * @type {?}
     * @private
     */
    FocusDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlckZvY3VzLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9wcm8vZGF0ZS1waWNrZXIvZGlyZWN0aXZlcy9kYXRlcGlja2VyRm9jdXMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBaUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUs1RSxNQUFNLE9BQU8sY0FBYztBQUFHO0FBQVE7QUFDbEM7QUFBUSxJQUVWLFlBQW9CLEVBQWM7QUFBSSxRQUFsQixPQUFFLEdBQUYsRUFBRSxDQUFZO0FBQUMsSUFBRSxDQUFDO0FBQ3hDO0FBQ087QUFDSDtBQUFRLElBRFYsZUFBZTtBQUNqQixRQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFDO0FBQ2xDLElBQUUsQ0FBQztBQUNIOzBDQVhDLFNBQVMsU0FBQyxrQkFDVCxRQUFRLEVBQUUsY0FBYyxlQUN6QjswSUFDSTtBQUFDO0FBQW1CO0FBQ2YsWUFOVSxVQUFVO0FBQUc7QUFBRztBQUFrQyxvQkFNbkUsS0FBSztBQUFJOzs7Ozs7OztvQkFBRTtBQUFDO0FBRWQ7QUFBcUIsSUFGcEIsK0JBQXVCO0FBQ3pCO0FBQ087QUFBaUI7QUFBZ0I7QUFFbEMsSUFGUSw0QkFBc0I7O0FBUkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFHQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFWQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBSkEsQUFBQSxBQU1BLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgQWZ0ZXJWaWV3SW5pdCwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW21kYkRwRm9jdXNdJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIEZvY3VzRGlyZWN0aXZlIGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XHJcbiAgQElucHV0KCkgdmFsdWU6IHN0cmluZztcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBlbDogRWxlbWVudFJlZikge31cclxuXHJcbiAgbmdBZnRlclZpZXdJbml0KCkge1xyXG4gICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LmZvY3VzKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==