/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
* Created by sebastianfuss on 03.09.16.
*/
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { PageScrollService } from './mdb-page-scroll.service';
import { PageScrollDirective } from './mdb-page-scroll.directive';
import * as ɵngcc0 from '@angular/core';
export class SmoothscrollModule {
    /**
     * @return {?}
     */
    static forRoot() {
        return {
            ngModule: SmoothscrollModule,
            providers: [
                { provide: PageScrollService, useClass: PageScrollService }
            ]
        };
    }
}
SmoothscrollModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SmoothscrollModule });
SmoothscrollModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SmoothscrollModule_Factory(t) { return new (t || SmoothscrollModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SmoothscrollModule, { declarations: function () { return [PageScrollDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [PageScrollDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SmoothscrollModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [PageScrollDirective],
                exports: [PageScrollDirective]
            }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLXBhZ2Utc2Nyb2xsLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9wcm8vc21vb3Roc2Nyb2xsL21kYi1wYWdlLXNjcm9sbC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3QyxPQUFPLEVBQUMsUUFBUSxFQUFzQixNQUFNLGVBQWUsQ0FBQztBQUU1RCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7QUFPaEUsTUFBTSxPQUFPLGtCQUFrQjtBQUMvQjtBQUFRO0FBQW1CO0FBQVEsSUFBakMsTUFBTSxDQUFDLE9BQU87QUFBSyxRQUNqQixPQUFPO0FBQ1gsWUFBUSxRQUFRLEVBQUUsa0JBQWtCO0FBQ3BDLFlBQVEsU0FBUyxFQUFFO0FBQ25CLGdCQUFZLEVBQUMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLFFBQVEsRUFBRSxpQkFBaUIsRUFBQztBQUNyRSxhQUFTO0FBQ1QsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0g7OENBZEMsUUFBUSxTQUFDO0FBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLGtCQUN2QixZQUFZLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxrQkFDbkMsT0FBTyxFQUFFLENBQUMsbUJBQW1CLENBQUMsY0FDL0I7Ozs7Ozs7Ozs7QUFWQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQWJBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4qIENyZWF0ZWQgYnkgc2ViYXN0aWFuZnVzcyBvbiAwMy4wOS4xNi5cbiovXG5cbmltcG9ydCB7Q29tbW9uTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHtOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVyc30gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7UGFnZVNjcm9sbFNlcnZpY2V9IGZyb20gJy4vbWRiLXBhZ2Utc2Nyb2xsLnNlcnZpY2UnO1xuaW1wb3J0IHtQYWdlU2Nyb2xsRGlyZWN0aXZlfSBmcm9tICcuL21kYi1wYWdlLXNjcm9sbC5kaXJlY3RpdmUnO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbQ29tbW9uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbUGFnZVNjcm9sbERpcmVjdGl2ZV0sXG4gIGV4cG9ydHM6IFtQYWdlU2Nyb2xsRGlyZWN0aXZlXVxufSlcbmV4cG9ydCBjbGFzcyBTbW9vdGhzY3JvbGxNb2R1bGUge1xuICBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBuZ01vZHVsZTogU21vb3Roc2Nyb2xsTW9kdWxlLFxuICAgICAgICBwcm92aWRlcnM6IFtcbiAgICAgICAgICAgIHtwcm92aWRlOiBQYWdlU2Nyb2xsU2VydmljZSwgdXNlQ2xhc3M6IFBhZ2VTY3JvbGxTZXJ2aWNlfVxuICAgICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19