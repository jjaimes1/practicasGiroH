/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Inject } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { CONTAINER_QUERY, COMPLETE_CLASS_NAME, TYPE_ERROR_CONTAINER_WAS_NOT_FOUND_MESSAGE, EMULATE_ELEMENT_NAME, } from './preloader.constants';
import * as ɵngcc0 from '@angular/core';
export class MDBSpinningPreloader {
    /**
     * @param {?} document
     */
    constructor(document) {
        this.document = document;
        this.container = this.document.querySelector(CONTAINER_QUERY);
    }
    /**
     * @return {?}
     */
    static errorHandler() {
        throw new TypeError(TYPE_ERROR_CONTAINER_WAS_NOT_FOUND_MESSAGE);
    }
    /**
     * @return {?}
     */
    start() {
        this.container.classList.remove(COMPLETE_CLASS_NAME);
    }
    /**
     * @return {?}
     */
    stop() {
        this.container.classList.add(COMPLETE_CLASS_NAME);
    }
    /**
     * @return {?}
     */
    get container() {
        return this._container;
    }
    /**
     * @param {?} element
     * @return {?}
     */
    set container(element) {
        this._container = element || this.document.createElement(EMULATE_ELEMENT_NAME);
    }
}
MDBSpinningPreloader.ɵfac = function MDBSpinningPreloader_Factory(t) { return new (t || MDBSpinningPreloader)(ɵngcc0.ɵɵinject(DOCUMENT)); };
MDBSpinningPreloader.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: MDBSpinningPreloader, factory: MDBSpinningPreloader.ɵfac });
/** @nocollapse */
MDBSpinningPreloader.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MDBSpinningPreloader, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [DOCUMENT]
            }] }]; }, null); })();
if (false) {
    /** @type {?} */
    MDBSpinningPreloader.prototype._container;
    /** @type {?} */
    MDBSpinningPreloader.prototype.document;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlbG9hZGVyLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIm5nLXVpa2l0LXByby1zdGFuZGFyZC9saWIvcHJvL3ByZWxvYWRlci9wcmVsb2FkZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFbkQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRTNDLE9BQU8sRUFDTCxlQUFlLEVBQ2YsbUJBQW1CLEVBQ25CLDBDQUEwQyxFQUMxQyxvQkFBb0IsR0FDckIsTUFBTSx1QkFBdUIsQ0FBQzs7QUFLL0IsTUFBTSxPQUFPLG9CQUFvQjtBQUNqQztBQUFRO0FBQTJCO0FBQVEsSUFNekMsWUFBcUMsUUFBYTtBQUNwRCxRQUR1QyxhQUFRLEdBQVIsUUFBUSxDQUFLO0FBQUMsUUFDakQsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUMsQ0FBQztBQUNsRSxJQUFFLENBQUM7QUFDSDtBQUNPO0FBQ0E7QUFBUSxJQVROLE1BQU0sQ0FBQyxZQUFZO0FBQzVCLFFBQUksTUFBTSxJQUFJLFNBQVMsQ0FBQywwQ0FBMEMsQ0FBQyxDQUFDO0FBQ3BFLElBQUUsQ0FBQztBQUNIO0FBQ087QUFBbUI7QUFBUSxJQUl6QixLQUFLO0FBQ2QsUUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUN6RCxJQUFFLENBQUM7QUFDSDtBQUNPO0FBQ0M7QUFBUSxJQURQLElBQUk7QUFDYixRQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO0FBQ3RELElBQUUsQ0FBQztBQUNIO0FBQ087QUFBbUI7QUFBUSxJQUFoQyxJQUFXLFNBQVM7QUFBSyxRQUN2QixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7QUFDM0IsSUFBRSxDQUFDO0FBQ0g7QUFDTztBQUEwQjtBQUNmO0FBQVEsSUFEeEIsSUFBVyxTQUFTLENBQUMsT0FBTztBQUM5QixRQUFJLElBQUksQ0FBQyxVQUFVLEdBQUcsT0FBTyxJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsYUFBYSxDQUFDLG9CQUFvQixDQUFDLENBQUM7QUFDbkYsSUFBRSxDQUFDO0FBQ0g7Z0RBM0JDLFVBQVU7NEhBQ1Q7QUFBQztBQUFtQjtBQUNVLDRDQU1qQixNQUFNLFNBQUMsUUFBUTtBQUFROzs7Ozs7a0NBQUU7QUFBQztBQUFhO0FBQ25DLElBUGpCLDBDQUErQztBQUNqRDtBQUNvQixJQUlOLHdDQUFzQzs7QUFyQkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUtBLEFBQUEsQUFBQSxBQUFBLEFBT0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBTkEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQU1BLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQTFCQSxBQUFBLEFBUUEsQUFBQSxBQUFBLEFBQUEsQUFOQSxBQUFBLEFBTUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBET0NVTUVOVCB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5cbmltcG9ydCB7XG4gIENPTlRBSU5FUl9RVUVSWSxcbiAgQ09NUExFVEVfQ0xBU1NfTkFNRSxcbiAgVFlQRV9FUlJPUl9DT05UQUlORVJfV0FTX05PVF9GT1VORF9NRVNTQUdFLFxuICBFTVVMQVRFX0VMRU1FTlRfTkFNRSxcbn0gZnJvbSAnLi9wcmVsb2FkZXIuY29uc3RhbnRzJztcblxuaW1wb3J0IHsgTURCX1NQSU5OSU5HX1BSRUxPQURFUl9UWVBFIH0gZnJvbSAnLi9wcmVsb2FkZXIudHlwZXMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTURCU3Bpbm5pbmdQcmVsb2FkZXIge1xuICBwdWJsaWMgX2NvbnRhaW5lcjogTURCX1NQSU5OSU5HX1BSRUxPQURFUl9UWVBFO1xuXG4gIHB1YmxpYyBzdGF0aWMgZXJyb3JIYW5kbGVyKCkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoVFlQRV9FUlJPUl9DT05UQUlORVJfV0FTX05PVF9GT1VORF9NRVNTQUdFKTtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKEBJbmplY3QoRE9DVU1FTlQpIHB1YmxpYyBkb2N1bWVudDogYW55KSB7XG4gICAgdGhpcy5jb250YWluZXIgPSB0aGlzLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoQ09OVEFJTkVSX1FVRVJZKTtcbiAgfVxuXG4gIHB1YmxpYyBzdGFydCgpIHtcbiAgICB0aGlzLmNvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKENPTVBMRVRFX0NMQVNTX05BTUUpO1xuICB9XG5cbiAgcHVibGljIHN0b3AoKSB7XG4gICAgdGhpcy5jb250YWluZXIuY2xhc3NMaXN0LmFkZChDT01QTEVURV9DTEFTU19OQU1FKTtcbiAgfVxuXG4gIHB1YmxpYyBnZXQgY29udGFpbmVyKCk6IE1EQl9TUElOTklOR19QUkVMT0FERVJfVFlQRSB7XG4gICAgcmV0dXJuIHRoaXMuX2NvbnRhaW5lcjtcbiAgfVxuXG4gIHB1YmxpYyBzZXQgY29udGFpbmVyKGVsZW1lbnQpIHtcbiAgICB0aGlzLl9jb250YWluZXIgPSBlbGVtZW50IHx8IHRoaXMuZG9jdW1lbnQuY3JlYXRlRWxlbWVudChFTVVMQVRFX0VMRU1FTlRfTkFNRSk7XG4gIH1cbn1cbiJdfQ==