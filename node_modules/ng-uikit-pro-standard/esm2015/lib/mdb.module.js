/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';
import { MDBBootstrapModule } from './free/mdb-free.module';
import { MDBBootstrapModulePro } from './pro/mdb-pro.module';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './free/mdb-free.module';
import * as ɵngcc2 from './pro/mdb-pro.module';
export { MDBBootstrapModule } from './free/mdb-free.module';
export { MDBBootstrapModulePro } from './pro/mdb-pro.module';
/** @type {?} */
const MODULES = [
    MDBBootstrapModule,
    MDBBootstrapModulePro
];
export class MDBRootModules {
}
MDBRootModules.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MDBRootModules });
MDBRootModules.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MDBRootModules_Factory(t) { return new (t || MDBRootModules)(); }, providers: [], imports: [[
            MDBBootstrapModule.forRoot(),
            MDBBootstrapModulePro.forRoot(),
        ], MDBBootstrapModule,
        MDBBootstrapModulePro] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MDBRootModules, { imports: [ɵngcc1.MDBRootModule, ɵngcc2.MDBRootModulePro], exports: [MDBBootstrapModule,
        MDBBootstrapModulePro] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MDBRootModules, [{
        type: NgModule,
        args: [{
                imports: [
                    MDBBootstrapModule.forRoot(),
                    MDBBootstrapModulePro.forRoot(),
                ],
                exports: MODULES,
                providers: [],
                schemas: [NO_ERRORS_SCHEMA]
            }]
    }], null, null); })();
export class MDBBootstrapModulesPro {
    /**
     * @return {?}
     */
    static forRoot() {
        return { ngModule: MDBRootModules };
    }
}
MDBBootstrapModulesPro.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MDBBootstrapModulesPro });
MDBBootstrapModulesPro.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MDBBootstrapModulesPro_Factory(t) { return new (t || MDBBootstrapModulesPro)(); }, imports: [MDBBootstrapModule,
        MDBBootstrapModulePro] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MDBBootstrapModulesPro, { exports: [MDBBootstrapModule,
        MDBBootstrapModulePro] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MDBBootstrapModulesPro, [{
        type: NgModule,
        args: [{ exports: MODULES }]
    }], null, null); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9tZGIubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQXVCLFFBQVEsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUVoRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQzs7OztBQUU3RCxPQUFPLEVBQ0wsa0JBQWtCLEVBQ25CLE1BQU0sd0JBQXdCLENBQUM7QUFFaEMsT0FBTyxFQUNMLHFCQUFxQixFQUN0QixNQUFNLHNCQUFzQixDQUFDO0FBQzlCO0FBQ2dCLE1BQVYsT0FBTyxHQUFHO0FBQ2hCLElBQUUsa0JBQWtCO0FBQ3BCLElBQUUscUJBQXFCO0FBQ3ZCLENBQUM7QUFZRCxNQUFNLE9BQU8sY0FBYztBQUMzQjswQ0FYQyxRQUFRLFNBQUM7SUFDUixPQUFPLEVBQUUsc0JBQ1Asa0JBQWtCLENBQUMsT0FBTyxFQUFFLHNCQUM1QixxQkFBcUIsQ0FBQyxPQUFPLEVBQUUsbUJBQ2hDLGtCQUNEO0FBQU8sRUFBRSxPQUFPLGtCQUNoQixTQUFTLEVBQUUsRUFDVjtnQkFDRCxPQUFPLEVBQUUsQ0FBRSxnQkFBZ0IsQ0FBRTtZQUM5Qjs7Ozs7Ozs7Ozs7Ozs7OzBCQUNJO0FBSUwsTUFBTSxPQUFPLHNCQUFzQjtBQUNuQztBQUFRO0FBQW1CO0FBQVEsSUFBMUIsTUFBTSxDQUFDLE9BQU87QUFBSyxRQUMxQixPQUFPLEVBQUMsUUFBUSxFQUFFLGNBQWMsRUFBQyxDQUFDO0FBQ3BDLElBQUUsQ0FBQztBQUNIO2tEQUxDLFFBQVEsU0FBQyxFQUFDLE9BQU8sRUFBRSxPQUFPLEVBQUM7Ozs7Ozs7OztBQS9CQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBWUEsQUFBQSxBQUFBLEFBQUEsQUFWQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBS0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBSkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlLCBOT19FUlJPUlNfU0NIRU1BIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IE1EQkJvb3RzdHJhcE1vZHVsZSB9IGZyb20gJy4vZnJlZS9tZGItZnJlZS5tb2R1bGUnO1xuaW1wb3J0IHsgTURCQm9vdHN0cmFwTW9kdWxlUHJvIH0gZnJvbSAnLi9wcm8vbWRiLXByby5tb2R1bGUnO1xuXG5leHBvcnQge1xuICBNREJCb290c3RyYXBNb2R1bGVcbn0gZnJvbSAnLi9mcmVlL21kYi1mcmVlLm1vZHVsZSc7XG5cbmV4cG9ydCB7XG4gIE1EQkJvb3RzdHJhcE1vZHVsZVByb1xufSBmcm9tICcuL3Byby9tZGItcHJvLm1vZHVsZSc7XG5cbmNvbnN0IE1PRFVMRVMgPSBbXG4gIE1EQkJvb3RzdHJhcE1vZHVsZSxcbiAgTURCQm9vdHN0cmFwTW9kdWxlUHJvXG5dO1xuXG5ATmdNb2R1bGUoe1xuICBpbXBvcnRzOiBbXG4gICAgTURCQm9vdHN0cmFwTW9kdWxlLmZvclJvb3QoKSxcbiAgICBNREJCb290c3RyYXBNb2R1bGVQcm8uZm9yUm9vdCgpLFxuICBdLFxuICBleHBvcnRzOiBNT0RVTEVTLFxuICBwcm92aWRlcnM6IFtcbiAgXSxcbiAgc2NoZW1hczogWyBOT19FUlJPUlNfU0NIRU1BIF1cbn0pXG5leHBvcnQgY2xhc3MgTURCUm9vdE1vZHVsZXMge1xufVxuXG5ATmdNb2R1bGUoe2V4cG9ydHM6IE1PRFVMRVN9KVxuZXhwb3J0IGNsYXNzIE1EQkJvb3RzdHJhcE1vZHVsZXNQcm8ge1xuICBwdWJsaWMgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVycyB7XG4gIHJldHVybiB7bmdNb2R1bGU6IE1EQlJvb3RNb2R1bGVzfTtcbiAgfVxufVxuIl19