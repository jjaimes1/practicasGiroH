/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var LocaleService = /** @class */ (function () {
    function LocaleService() {
        this.locales = {
            'en': {
                dayLabelsFull: { su: 'Sunday', mo: 'Monday', tu: 'Tuesday', we: 'Wednesday', th: 'Thursday', fr: 'Friday', sa: 'Saturday' },
                dayLabels: { su: 'Sun', mo: 'Mon', tu: 'Tue', we: 'Wed', th: 'Thu', fr: 'Fri', sa: 'Sat' },
                monthLabelsFull: {
                    1: 'January',
                    2: 'February',
                    3: 'March',
                    4: 'April',
                    5: 'May',
                    6: 'June',
                    7: 'July',
                    8: 'August',
                    9: 'September',
                    10: 'October',
                    11: 'November',
                    12: 'December'
                },
                monthLabels: {
                    1: 'Jan',
                    2: 'Feb',
                    3: 'Mar',
                    4: 'Apr',
                    5: 'May',
                    6: 'Jun',
                    7: 'Jul',
                    8: 'Aug',
                    9: 'Sep',
                    10: 'Oct',
                    11: 'Nov',
                    12: 'Dec'
                },
                dateFormat: 'yyyy-mm-dd',
                todayBtnTxt: 'Today',
                clearBtnTxt: 'Clear',
                closeBtnTxt: 'Close',
                firstDayOfWeek: 'mo',
                sunHighlight: false,
            }
        };
    }
    /**
     * @param {?} locale
     * @return {?}
     */
    LocaleService.prototype.setLocaleOptions = /**
     * @param {?} locale
     * @return {?}
     */
    function (locale) {
        var _this = this;
        Object.entries(locale).forEach((/**
         * @param {?} loc
         * @return {?}
         */
        function (loc) {
            /** @type {?} */
            var localeIdentifier = loc[0];
            _this.locales[localeIdentifier] = loc[1];
        }));
    };
    /**
     * @param {?} locale
     * @return {?}
     */
    LocaleService.prototype.getLocaleOptions = /**
     * @param {?} locale
     * @return {?}
     */
    function (locale) {
        if (locale && this.locales.hasOwnProperty(locale)) {
            // User given locale
            return this.locales[locale];
        }
        // Default: en
        return this.locales['en'];
    };
LocaleService.ɵfac = function LocaleService_Factory(t) { return new (t || LocaleService)(); };
LocaleService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: LocaleService, factory: function (t) { return LocaleService.ɵfac(t); } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LocaleService, [{
        type: Injectable
    }], function () { return []; }, null); })();
    return LocaleService;
}());
export { LocaleService };
if (false) {
    /** @type {?} */
    LocaleService.prototype.locales;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlckxvY2FsZS5zZXJ2aWNlLmpzIiwic291cmNlcyI6WyJuZy11aWtpdC1wcm8tc3RhbmRhcmQvbGliL3Byby9kYXRlLXBpY2tlci9zZXJ2aWNlcy9kYXRlcGlja2VyTG9jYWxlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBRzNDO0FBRU0sSUFGTjtBQUNhLFFBQ0osWUFBTyxHQUFlO0FBQy9CLFlBQUksSUFBSSxFQUFFO0FBQ1YsZ0JBQU0sYUFBYSxFQUFFLEVBQUUsRUFBRSxFQUFFLFFBQVEsRUFBRSxFQUFFLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLFdBQVcsRUFBRSxFQUFFLEVBQUUsVUFBVSxFQUFFLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRTtBQUNqSSxnQkFBTSxTQUFTLEVBQUUsRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQUUsRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsS0FBSyxFQUFFO0FBQ2hHLGdCQUFNLGVBQWUsRUFBRTtBQUN2QixvQkFBUSxDQUFDLEVBQUUsU0FBUztBQUNwQixvQkFBUSxDQUFDLEVBQUUsVUFBVTtBQUNyQixvQkFBUSxDQUFDLEVBQUUsT0FBTztBQUNsQixvQkFBUSxDQUFDLEVBQUUsT0FBTztBQUNsQixvQkFBUSxDQUFDLEVBQUUsS0FBSztBQUNoQixvQkFBUSxDQUFDLEVBQUUsTUFBTTtBQUNqQixvQkFBUSxDQUFDLEVBQUUsTUFBTTtBQUNqQixvQkFBUSxDQUFDLEVBQUUsUUFBUTtBQUNuQixvQkFBUSxDQUFDLEVBQUUsV0FBVztBQUN0QixvQkFBUSxFQUFFLEVBQUUsU0FBUztBQUNyQixv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LEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQWlCQSxBQUFBLEFBZkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBS0EsQUFKQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUF2REEsQUFBQSxBQXdEQSxBQUFBLEFBQUEsQUF4REEsQUF3REEsQUF2REEsQUFBQSxBQUNBLEFBcUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBJTXlMb2NhbGVzLCBJTXlPcHRpb25zIH0gZnJvbSAnLi4vaW50ZXJmYWNlcy9pbmRleCc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBMb2NhbGVTZXJ2aWNlIHtcclxuICBwdWJsaWMgbG9jYWxlczogSU15TG9jYWxlcyA9IHtcclxuICAgICdlbic6IHtcclxuICAgICAgZGF5TGFiZWxzRnVsbDogeyBzdTogJ1N1bmRheScsIG1vOiAnTW9uZGF5JywgdHU6ICdUdWVzZGF5Jywgd2U6ICdXZWRuZXNkYXknLCB0aDogJ1RodXJzZGF5JywgZnI6ICdGcmlkYXknLCBzYTogJ1NhdHVyZGF5JyB9LFxyXG4gICAgICBkYXlMYWJlbHM6IHsgc3U6ICdTdW4nLCBtbzogJ01vbicsIHR1OiAnVHVlJywgd2U6ICdXZWQnLCB0aDogJ1RodScsIGZyOiAnRnJpJywgc2E6ICdTYXQnIH0sXHJcbiAgICAgIG1vbnRoTGFiZWxzRnVsbDoge1xyXG4gICAgICAgIDE6ICdKYW51YXJ5JyxcclxuICAgICAgICAyOiAnRmVicnVhcnknLFxyXG4gICAgICAgIDM6ICdNYXJjaCcsXHJcbiAgICAgICAgNDogJ0FwcmlsJyxcclxuICAgICAgICA1OiAnTWF5JyxcclxuICAgICAgICA2OiAnSnVuZScsXHJcbiAgICAgICAgNzogJ0p1bHknLFxyXG4gICAgICAgIDg6ICdBdWd1c3QnLFxyXG4gICAgICAgIDk6ICdTZXB0ZW1iZXInLFxyXG4gICAgICAgIDEwOiAnT2N0b2JlcicsXHJcbiAgICAgICAgMTE6ICdOb3ZlbWJlcicsXHJcbiAgICAgICAgMTI6ICdEZWNlbWJlcicgfSxcclxuICAgICAgbW9udGhMYWJlbHM6IHtcclxuICAgICAgICAxOiAnSmFuJyxcclxuICAgICAgICAyOiAnRmViJyxcclxuICAgICAgICAzOiAnTWFyJyxcclxuICAgICAgICA0OiAnQXByJyxcclxuICAgICAgICA1OiAnTWF5JyxcclxuICAgICAgICA2OiAnSnVuJyxcclxuICAgICAgICA3OiAnSnVsJyxcclxuICAgICAgICA4OiAnQXVnJyxcclxuICAgICAgICA5OiAnU2VwJyxcclxuICAgICAgICAxMDogJ09jdCcsXHJcbiAgICAgICAgMTE6ICdOb3YnLFxyXG4gICAgICAgIDEyOiAnRGVjJyB9LFxyXG4gICAgICBkYXRlRm9ybWF0OiAneXl5eS1tbS1kZCcsXHJcbiAgICAgIHRvZGF5QnRuVHh0OiAnVG9kYXknLFxyXG4gICAgICBjbGVhckJ0blR4dDogJ0NsZWFyJyxcclxuICAgICAgY2xvc2VCdG5UeHQ6ICdDbG9zZScsXHJcbiAgICAgIGZpcnN0RGF5T2ZXZWVrOiAnbW8nLFxyXG4gICAgICBzdW5IaWdobGlnaHQ6IGZhbHNlLFxyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIHNldExvY2FsZU9wdGlvbnMobG9jYWxlOiBJTXlMb2NhbGVzKSB7XHJcbiAgICBPYmplY3QuZW50cmllcyhsb2NhbGUpLmZvckVhY2goKGxvYzogYW55KSA9PiB7XHJcbiAgICAgIGNvbnN0IGxvY2FsZUlkZW50aWZpZXIgPSBsb2NbMF07XHJcbiAgICAgIHRoaXMubG9jYWxlc1tsb2NhbGVJZGVudGlmaWVyXSA9IGxvY1sxXTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZ2V0TG9jYWxlT3B0aW9ucyhsb2NhbGU6IHN0cmluZyk6IElNeU9wdGlvbnMge1xyXG4gICAgaWYgKGxvY2FsZSAmJiB0aGlzLmxvY2FsZXMuaGFzT3duUHJvcGVydHkobG9jYWxlKSkge1xyXG4gICAgICAvLyBVc2VyIGdpdmVuIGxvY2FsZVxyXG4gICAgICByZXR1cm4gdGhpcy5sb2NhbGVzW2xvY2FsZV07XHJcbiAgICB9XHJcbiAgICAvLyBEZWZhdWx0OiBlblxyXG4gICAgcmV0dXJuIHRoaXMubG9jYWxlc1snZW4nXTtcclxuICB9XHJcbn1cclxuIl19