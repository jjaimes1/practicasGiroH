/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Input } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var FocusDirective = /** @class */ (function () {
    function FocusDirective(el) {
        this.el = el;
    }
    /**
     * @return {?}
     */
    FocusDirective.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.el.nativeElement.focus();
    };
    /** @nocollapse */
    FocusDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    FocusDirective.propDecorators = {
        value: [{ type: Input }]
    };
FocusDirective.ɵfac = function FocusDirective_Factory(t) { return new (t || FocusDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
FocusDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: FocusDirective, selectors: [["", "mdbDpFocus", ""]], inputs: { value: "value" } });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(FocusDirective, [{
        type: Directive,
        args: [{
                selector: '[mdbDpFocus]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { value: [{
            type: Input
        }] }); })();
    return FocusDirective;
}());
export { FocusDirective };
if (false) {
    /** @type {?} */
    FocusDirective.prototype.value;
    /**
     * @type {?}
     * @private
     */
    FocusDirective.prototype.el;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZXBpY2tlckZvY3VzLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9wcm8vZGF0ZS1waWNrZXIvZGlyZWN0aXZlcy9kYXRlcGlja2VyRm9jdXMuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBaUIsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDOztBQUU1RTtBQUdNLElBR0osd0JBQW9CLEVBQWM7QUFBSSxRQUFsQixPQUFFLEdBQUYsRUFBRSxDQUFZO0FBQUMsSUFBRSxDQUFDO0FBQ3hDO0FBQ087QUFDSDtBQUFRLElBRFYsd0NBQWU7QUFDZjtBQUFtQjtBQUFRLElBRDNCO0FBQWMsUUFDWixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztBQUNsQyxJQUFFLENBQUMsQ0FQTTtBQUFDOzJCQUhULFNBQVMsU0FBQyw3Q0FHc0I7UUFGL0IsUUFBUSxFQUFFLGxCQUtGLGdCQVJVLFVBQVU7R0FHSixIQUhPO1lBSWhDLFpBSjBDO0FBRXhDLHdCQUlBLEtBQUs7QUFBSTs7Ozs7Ozs7OztvQkFBTTtBQUFDLElBT25CLHFCQUFDO0FBQ0EsQ0FEQSxBQVhELElBV0M7QUFDRCxTQVRhLGNBQWM7QUFBSTtBQUFhO0FBQ2xDLElBQVIsK0JBQXVCO0FBQ3pCO0FBQ087QUFBaUI7QUFBZ0I7QUFFbEMsSUFGUSw0QkFBc0I7O0FBUkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFNQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQVZBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFKQSxBQUFBLEFBTUEsQUFBQSxBQU9BLEFBQUEsQUFBQSxBQVhBLEFBV0EsQUFSQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIEFmdGVyVmlld0luaXQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1ttZGJEcEZvY3VzXScsXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBGb2N1c0RpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQge1xyXG4gIEBJbnB1dCgpIHZhbHVlOiBzdHJpbmc7XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWw6IEVsZW1lbnRSZWYpIHt9XHJcblxyXG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcclxuICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5mb2N1cygpO1xyXG4gIH1cclxufVxyXG4iXX0=