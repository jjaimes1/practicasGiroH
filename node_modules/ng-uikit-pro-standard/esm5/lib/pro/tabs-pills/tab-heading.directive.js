/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, TemplateRef } from '@angular/core';
import { TabDirective } from './tab.directive';
/**
 * Should be used to mark <template> element as a template for tab heading
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './tab.directive';
var TabHeadingDirective = /** @class */ (function () {
    function TabHeadingDirective(templateRef, tab) {
        tab.headingRef = templateRef;
    }
    /** @nocollapse */
    TabHeadingDirective.ctorParameters = function () { return [
        { type: TemplateRef },
        { type: TabDirective }
    ]; };
TabHeadingDirective.ɵfac = function TabHeadingDirective_Factory(t) { return new (t || TabHeadingDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.TabDirective)); };
TabHeadingDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: TabHeadingDirective, selectors: [["", "mdbTabHeading", ""]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TabHeadingDirective, [{
        type: Directive,
        args: [{ selector: '[mdbTabHeading]' }]
    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc1.TabDirective }]; }, null); })();
    return TabHeadingDirective;
}());
export { TabHeadingDirective };
if (false) {
    /** @type {?} */
    TabHeadingDirective.prototype.templateRef;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFiLWhlYWRpbmcuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZy11aWtpdC1wcm8tc3RhbmRhcmQvbGliL3Byby90YWJzLXBpbGxzL3RhYi1oZWFkaW5nLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DO0FBQ0c7QUFBMkU7OztBQUM5RTtBQUNhLElBR1gsNkJBQW1CLFdBQTZCLEVBQUUsR0FBaUI7QUFDckUsUUFBSSxHQUFHLENBQUMsVUFBVSxHQUFHLFdBQVcsQ0FBQztBQUNqQyxJQUFFLENBQUMsQUFMTTtBQUFDO2dDQURULFNBQVMsU0FBQyxFQUFDLFFBQVEsRUFBRSw5REFDVztlQURNLEVBQUMsakJBSW5CLGdCQVRELFdBQVc7QUFBSSxnQkFFMUIsWUFBWTtBQUFHOzs7Ozs7MkdBQVM7QUFBQyxJQVVsQywwQkFBQztBQUNBLENBREEsQUFQRCxJQU9DO0FBQ0QsU0FQYSxtQkFBbUI7QUFDL0I7QUFBYTtBQUFxQixJQUFqQywwQ0FBcUM7O0FBUEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBR0EsQUFJQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBTkEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUxBLEFBQUEsQUFFQSxBQUFBLEFBVUEsQUFBQSxBQUFBLEFBUEEsQUFPQSxBQU5BLEFBQUEsQUFDQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBUYWJEaXJlY3RpdmUgfSBmcm9tICcuL3RhYi5kaXJlY3RpdmUnO1xuXG4vKiogU2hvdWxkIGJlIHVzZWQgdG8gbWFyayA8dGVtcGxhdGU+IGVsZW1lbnQgYXMgYSB0ZW1wbGF0ZSBmb3IgdGFiIGhlYWRpbmcgKi9cbkBEaXJlY3RpdmUoe3NlbGVjdG9yOiAnW21kYlRhYkhlYWRpbmddJ30pXG5leHBvcnQgY2xhc3MgVGFiSGVhZGluZ0RpcmVjdGl2ZSB7XG4gIHB1YmxpYyB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PjtcblxuICBwdWJsaWMgY29uc3RydWN0b3IodGVtcGxhdGVSZWY6IFRlbXBsYXRlUmVmPGFueT4sIHRhYjogVGFiRGlyZWN0aXZlKSB7XG4gICAgdGFiLmhlYWRpbmdSZWYgPSB0ZW1wbGF0ZVJlZjtcbiAgfVxufVxuIl19