/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CharCounterDirective } from './char-counter.directive';
import * as ɵngcc0 from '@angular/core';
var CharCounterModule = /** @class */ (function () {
    function CharCounterModule() {
    }
    /**
     * @return {?}
     */
    CharCounterModule.forRoot = /**
     * @return {?}
     */
    function () {
        return { ngModule: CharCounterModule, providers: [] };
    };
CharCounterModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CharCounterModule });
CharCounterModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CharCounterModule_Factory(t) { return new (t || CharCounterModule)(); } });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CharCounterModule, { declarations: function () { return [CharCounterDirective]; }, exports: function () { return [CharCounterDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CharCounterModule, [{
        type: NgModule,
        args: [{
                declarations: [CharCounterDirective],
                exports: [CharCounterDirective]
            }]
    }], function () { return []; }, null); })();
    return CharCounterModule;
}());
export { CharCounterModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhci1jb3VudGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9wcm8vaW5wdXRzL2NoYXItY291bnRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQXdCLE1BQU0sZUFBZSxDQUFDO0FBQy9ELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDBCQUEwQixDQUFDOztBQUVoRTtBQUVDLElBRkQ7QUFDbUIsSUFRbkIsQ0FBQztBQUNEO0FBQVE7QUFBbUI7QUFBUSxJQUpuQix5QkFBTztBQUFPO0FBQzlCO0FBQVEsSUFETjtBQUFjLFFBQ1osT0FBTyxFQUFDLFFBQVEsRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFDLENBQUM7QUFDeEQsSUFBRSxDQUFDO3FEQVJGLFFBQVEsU0FBQzthQUNSLFlBQVksRUFBRSxDQUFDLG9CQUFvQixDQUFDLHNCQUNwQyxPQUFPLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQyxrQkFDaEM7Ozs7Ozs7O2dEQUVPO0FBQUMsSUFJVCx3QkFBQztBQUNBLENBREEsQUFURCxJQVNDOztBQVpBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQVNBLEFBQUEsQUFIQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBUkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFNQSxBQUFBLEFBQUEsQUFUQSxBQVNBLEFBSkEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzICB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2hhckNvdW50ZXJEaXJlY3RpdmUgfSBmcm9tICcuL2NoYXItY291bnRlci5kaXJlY3RpdmUnO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtDaGFyQ291bnRlckRpcmVjdGl2ZV0sXG4gIGV4cG9ydHM6IFtDaGFyQ291bnRlckRpcmVjdGl2ZV1cbn0pXG5cbmV4cG9ydCBjbGFzcyBDaGFyQ291bnRlck1vZHVsZSB7XG4gIHB1YmxpYyBzdGF0aWMgZm9yUm9vdCgpOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge25nTW9kdWxlOiBDaGFyQ291bnRlck1vZHVsZSwgcHJvdmlkZXJzOiBbXX07XG4gIH1cbn1cbiJdfQ==