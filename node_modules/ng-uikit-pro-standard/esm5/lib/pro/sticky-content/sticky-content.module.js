/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { MdbStickyDirective } from './sticky-content.directive';
import * as ɵngcc0 from '@angular/core';
export { MdbStickyDirective };
var StickyContentModule = /** @class */ (function () {
    function StickyContentModule() {
    }
StickyContentModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: StickyContentModule });
StickyContentModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function StickyContentModule_Factory(t) { return new (t || StickyContentModule)(); }, imports: [[CommonModule, FormsModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(StickyContentModule, { declarations: function () { return [MdbStickyDirective]; }, imports: function () { return [CommonModule, FormsModule]; }, exports: function () { return [MdbStickyDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(StickyContentModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, FormsModule],
                declarations: [MdbStickyDirective],
                exports: [MdbStickyDirective]
            }]
    }], function () { return []; }, null); })();
    return StickyContentModule;
}());
export { StickyContentModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RpY2t5LWNvbnRlbnQubW9kdWxlLmpzIiwic291cmNlcyI6WyJuZy11aWtpdC1wcm8tc3RhbmRhcmQvbGliL3Byby9zdGlja3ktY29udGVudC9zdGlja3ktY29udGVudC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxZQUFZLEVBQUcsTUFBTSxpQkFBaUIsQ0FBQztBQUVoRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7QUFFaEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLENBQUM7QUFFOUI7QUFFQyxJQUZEO0FBQ3FCLElBS2EsQ0FBQzt1REFObEMsUUFBUSxTQUFDO1dBQ1IsT0FBTyxFQUFFLENBQUUsWUFBWSxFQUFFLFdBQVcsQ0FBRSxzQkFDdEMsWUFBWSxFQUFFLENBQUMsa0JBQWtCLENBQUMsc0JBQ2xDLE9BQU8sRUFBRSxDQUFFLGtCQUFrQixDQUFFLGtCQUNoQzs7Ozs7Ozs7O2dEQUVPO0FBQUMsSUFBeUIsMEJBQUM7QUFDbEMsQ0FEa0MsQUFObkMsSUFNbUM7O0FBZEEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUVBLEFBQUEsQUFNQSxBQUFBLEFBTkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBRUEsQUFBQSxBQUFBLEFBTkEsQUFNQSxBQUFBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcblxuaW1wb3J0IHsgTWRiU3RpY2t5RGlyZWN0aXZlIH0gZnJvbSAnLi9zdGlja3ktY29udGVudC5kaXJlY3RpdmUnO1xuXG5leHBvcnQgeyBNZGJTdGlja3lEaXJlY3RpdmUgfTtcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogWyBDb21tb25Nb2R1bGUsIEZvcm1zTW9kdWxlIF0sXG4gIGRlY2xhcmF0aW9uczogW01kYlN0aWNreURpcmVjdGl2ZV0sXG4gIGV4cG9ydHM6IFsgTWRiU3RpY2t5RGlyZWN0aXZlIF1cbn0pXG5cbmV4cG9ydCBjbGFzcyBTdGlja3lDb250ZW50TW9kdWxlIHt9XG4iXX0=