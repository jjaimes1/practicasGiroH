/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { MdbRangeInputComponent } from './mdb-range.component';
import { NgModule } from '@angular/core';
import { MdbMultiRangeInputComponent } from './multi-range/mdb-multi-range.component';
import * as ɵngcc0 from '@angular/core';
var RangeModule = /** @class */ (function () {
    function RangeModule() {
    }
RangeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RangeModule });
RangeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function RangeModule_Factory(t) { return new (t || RangeModule)(); }, imports: [[CommonModule, FormsModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RangeModule, { declarations: function () { return [MdbRangeInputComponent, MdbMultiRangeInputComponent]; }, imports: function () { return [CommonModule, FormsModule]; }, exports: function () { return [MdbRangeInputComponent, MdbMultiRangeInputComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(RangeModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule, FormsModule],
                declarations: [MdbRangeInputComponent, MdbMultiRangeInputComponent],
                exports: [MdbRangeInputComponent, MdbMultiRangeInputComponent]
            }]
    }], function () { return []; }, null); })();
    return RangeModule;
}());
export { RangeModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmFuZ2UubW9kdWxlLmpzIiwic291cmNlcyI6WyJuZy11aWtpdC1wcm8tc3RhbmRhcmQvbGliL3Byby9yYW5nZS9yYW5nZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDL0QsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQzs7QUFFdEY7QUFDbUMsSUFEbkM7QUFDYSxJQUlhLENBQUM7K0NBTDFCLFFBQVEsU0FBQzttQkFDUixPQUFPLEVBQUUsQ0FBQyxZQUFZLEVBQUUsV0FBVyxDQUFDLHNCQUNwQyxZQUFZLEVBQUUsQ0FBQyxzQkFBc0IsRUFBRSwyQkFBMkIsQ0FBQyxzQkFDbkU7TUFBTyxFQUFFLENBQUMsc0JBQXNCLEVBQUUsMkJBQTJCLENBQUMsbUJBQy9EOzs7Ozs7OztnREFDUTtBQUFDLElBQWdCLGtCQUFDO0FBQzFCLENBRDBCLEFBTDNCLElBSzJCOztBQVhBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUtBLEFBQUEsQUFMQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUxBLEFBS0EsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTWRiUmFuZ2VJbnB1dENvbXBvbmVudCB9IGZyb20gJy4vbWRiLXJhbmdlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTWRiTXVsdGlSYW5nZUlucHV0Q29tcG9uZW50IH0gZnJvbSAnLi9tdWx0aS1yYW5nZS9tZGItbXVsdGktcmFuZ2UuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZSwgRm9ybXNNb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtNZGJSYW5nZUlucHV0Q29tcG9uZW50LCBNZGJNdWx0aVJhbmdlSW5wdXRDb21wb25lbnRdLFxuICBleHBvcnRzOiBbTWRiUmFuZ2VJbnB1dENvbXBvbmVudCwgTWRiTXVsdGlSYW5nZUlucHV0Q29tcG9uZW50XSxcbn0pXG5leHBvcnQgY2xhc3MgUmFuZ2VNb2R1bGUge31cbiJdfQ==