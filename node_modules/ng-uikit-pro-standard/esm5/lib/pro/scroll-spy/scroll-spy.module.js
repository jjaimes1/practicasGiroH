/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { ScrollSpyDirective } from './scroll-spy.directive';
import { ScrollSpyLinkDirective } from './scroll-spy-link.directive';
import { ScrollSpyWindowDirective } from './scroll-spy-window.directive';
import { ScrollSpyElementDirective } from './scroll-spy-element.directive';
import { ScrollSpyService } from './scroll-spy.service';
import * as ɵngcc0 from '@angular/core';
var ScrollSpyModule = /** @class */ (function () {
    function ScrollSpyModule() {
    }
ScrollSpyModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollSpyModule });
ScrollSpyModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollSpyModule_Factory(t) { return new (t || ScrollSpyModule)(); }, providers: [ScrollSpyService] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollSpyModule, { declarations: function () { return [ScrollSpyDirective,
        ScrollSpyLinkDirective,
        ScrollSpyWindowDirective,
        ScrollSpyElementDirective]; }, exports: function () { return [ScrollSpyDirective,
        ScrollSpyLinkDirective,
        ScrollSpyWindowDirective,
        ScrollSpyElementDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollSpyModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    ScrollSpyDirective,
                    ScrollSpyLinkDirective,
                    ScrollSpyWindowDirective,
                    ScrollSpyElementDirective
                ],
                exports: [
                    ScrollSpyDirective,
                    ScrollSpyLinkDirective,
                    ScrollSpyWindowDirective,
                    ScrollSpyElementDirective
                ],
                providers: [ScrollSpyService]
            }]
    }], function () { return []; }, null); })();
    return ScrollSpyModule;
}());
export { ScrollSpyModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Nyb2xsLXNweS5tb2R1bGUuanMiLCJzb3VyY2VzIjpbIm5nLXVpa2l0LXByby1zdGFuZGFyZC9saWIvcHJvL3Njcm9sbC1zcHkvc2Nyb2xsLXNweS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFekMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDckUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDekUsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0UsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7O0FBR3hEO0FBRXFCLElBRnJCO0FBQ2lCLElBY2MsQ0FBQzttREFmL0IsUUFBUSxTQUFDO2VBQ1IsWUFBWSxFQUFFLDBCQUNaLGtCQUFrQiwwQkFDbEIsc0JBQXNCLDBCQUN0QjtDQUF3QiwwQkFDeEIseUJBQXlCLHNCQUMxQixzQkFDRCxPQUFPLEVBQUUsMEJBQ1Asa0JBQWtCO1FBQ2xCLHNCQUFzQjt3QkFDdEI7Y0FBd0IsMEJBQ3hCLHlCQUF5QixzQkFDMUI7bUJBQ0QsU0FBUyxFQUFFLENBQUU7ZUFBZ0IsQ0FBRTtBQUNoQzs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dEQUNRO0FBQUMsSUFBcUIsc0JBQUM7QUFDL0IsQ0FEK0IsQUFmaEMsSUFlZ0M7O0FBeEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUdBLEFBQUEsQUFlQSxBQUFBLEFBZkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQUEsQUFmQSxBQWVBLEFBQUEsQUFBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbmltcG9ydCB7IFNjcm9sbFNweURpcmVjdGl2ZSB9IGZyb20gJy4vc2Nyb2xsLXNweS5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU2Nyb2xsU3B5TGlua0RpcmVjdGl2ZSB9IGZyb20gJy4vc2Nyb2xsLXNweS1saW5rLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTY3JvbGxTcHlXaW5kb3dEaXJlY3RpdmUgfSBmcm9tICcuL3Njcm9sbC1zcHktd2luZG93LmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBTY3JvbGxTcHlFbGVtZW50RGlyZWN0aXZlIH0gZnJvbSAnLi9zY3JvbGwtc3B5LWVsZW1lbnQuZGlyZWN0aXZlJztcbmltcG9ydCB7IFNjcm9sbFNweVNlcnZpY2UgfSBmcm9tICcuL3Njcm9sbC1zcHkuc2VydmljZSc7XG5cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgU2Nyb2xsU3B5RGlyZWN0aXZlLFxuICAgIFNjcm9sbFNweUxpbmtEaXJlY3RpdmUsXG4gICAgU2Nyb2xsU3B5V2luZG93RGlyZWN0aXZlLFxuICAgIFNjcm9sbFNweUVsZW1lbnREaXJlY3RpdmVcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIFNjcm9sbFNweURpcmVjdGl2ZSxcbiAgICBTY3JvbGxTcHlMaW5rRGlyZWN0aXZlLFxuICAgIFNjcm9sbFNweVdpbmRvd0RpcmVjdGl2ZSxcbiAgICBTY3JvbGxTcHlFbGVtZW50RGlyZWN0aXZlXG4gIF0sXG4gIHByb3ZpZGVyczogWyBTY3JvbGxTcHlTZXJ2aWNlIF1cbn0pXG5leHBvcnQgY2xhc3MgU2Nyb2xsU3B5TW9kdWxlIHsgfVxuIl19