/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
* Created by sebastianfuss on 03.09.16.
*/
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { PageScrollService } from './mdb-page-scroll.service';
import { PageScrollDirective } from './mdb-page-scroll.directive';
import * as ɵngcc0 from '@angular/core';
var SmoothscrollModule = /** @class */ (function () {
    function SmoothscrollModule() {
    }
    /**
     * @return {?}
     */
    SmoothscrollModule.forRoot = /**
     * @return {?}
     */
    function () {
        return {
            ngModule: SmoothscrollModule,
            providers: [
                { provide: PageScrollService, useClass: PageScrollService }
            ]
        };
    };
SmoothscrollModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SmoothscrollModule });
SmoothscrollModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SmoothscrollModule_Factory(t) { return new (t || SmoothscrollModule)(); }, imports: [[CommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SmoothscrollModule, { declarations: function () { return [PageScrollDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [PageScrollDirective]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SmoothscrollModule, [{
        type: NgModule,
        args: [{
                imports: [CommonModule],
                declarations: [PageScrollDirective],
                exports: [PageScrollDirective]
            }]
    }], function () { return []; }, null); })();
    return SmoothscrollModule;
}());
export { SmoothscrollModule };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLXBhZ2Utc2Nyb2xsLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9wcm8vc21vb3Roc2Nyb2xsL21kYi1wYWdlLXNjcm9sbC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3QyxPQUFPLEVBQUMsUUFBUSxFQUFzQixNQUFNLGVBQWUsQ0FBQztBQUU1RCxPQUFPLEVBQUMsaUJBQWlCLEVBQUMsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSw2QkFBNkIsQ0FBQzs7QUFFaEU7QUFFZSxJQUZmO0FBQ29CLElBYXBCLENBQUM7QUFDRDtBQUFRO0FBQW1CO0FBQVEsSUFUMUIsMEJBQU87QUFBTztBQUN2QjtBQUFRLElBRE47QUFBYyxRQUNaLE9BQU87QUFDWCxZQUFRLFFBQVEsRUFBRSxrQkFBa0I7QUFDcEMsWUFBUSxTQUFTLEVBQUU7QUFDbkIsZ0JBQVksRUFBQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLGlCQUFpQixFQUFDO0FBQ3JFLGFBQVM7QUFDVCxTQUFLLENBQUM7QUFDTixJQUFFLENBQUM7c0RBYkYsUUFBUSxTQUFDO1lBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxDQUFDLHNCQUN2QixZQUFZLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxzQkFDbkMsT0FBTyxFQUFFLENBQUMsbUJBQW1CLENBQUMsa0JBQy9COzs7Ozs7Ozs7Z0RBQ1E7QUFBQyxJQVNWLHlCQUFDO0FBQ0EsQ0FEQSxBQWRELElBY0M7O0FBcEJBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFFQSxBQUFBLEFBY0EsQUFBQSxBQVJBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQWJBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBVUEsQUFBQSxBQUFBLEFBZEEsQUFjQSxBQVRBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogQ3JlYXRlZCBieSBzZWJhc3RpYW5mdXNzIG9uIDAzLjA5LjE2LlxuKi9cblxuaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge05nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtQYWdlU2Nyb2xsU2VydmljZX0gZnJvbSAnLi9tZGItcGFnZS1zY3JvbGwuc2VydmljZSc7XG5pbXBvcnQge1BhZ2VTY3JvbGxEaXJlY3RpdmV9IGZyb20gJy4vbWRiLXBhZ2Utc2Nyb2xsLmRpcmVjdGl2ZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuICBkZWNsYXJhdGlvbnM6IFtQYWdlU2Nyb2xsRGlyZWN0aXZlXSxcbiAgZXhwb3J0czogW1BhZ2VTY3JvbGxEaXJlY3RpdmVdXG59KVxuZXhwb3J0IGNsYXNzIFNtb290aHNjcm9sbE1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xuICAgIHJldHVybiB7XG4gICAgICAgIG5nTW9kdWxlOiBTbW9vdGhzY3JvbGxNb2R1bGUsXG4gICAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAgICAge3Byb3ZpZGU6IFBhZ2VTY3JvbGxTZXJ2aWNlLCB1c2VDbGFzczogUGFnZVNjcm9sbFNlcnZpY2V9XG4gICAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=