/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild, TemplateRef, ElementRef, ChangeDetectionStrategy, } from '@angular/core';
import { FormGroup } from '@angular/forms';
import * as ɵngcc0 from '@angular/core';

function MdbStepComponent_ng_template_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵprojection(0);
} }
var _c0 = ["*"];
var MdbStepComponent = /** @class */ (function () {
    function MdbStepComponent(el) {
        this.el = el;
        this.editable = true;
        this._isActive = false;
    }
    Object.defineProperty(MdbStepComponent.prototype, "isDone", {
        get: /**
         * @return {?}
         */
        function () {
            return this._isDone;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._isDone = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdbStepComponent.prototype, "isWrong", {
        get: /**
         * @return {?}
         */
        function () {
            return this._isWrong;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._isWrong = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MdbStepComponent.prototype, "isActive", {
        get: /**
         * @return {?}
         */
        function () {
            return this._isActive;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._isActive = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @private
     * @return {?}
     */
    MdbStepComponent.prototype._removeClasses = /**
     * @private
     * @return {?}
     */
    function () {
        this.isActive = false;
        this.isDone = false;
        this.isWrong = false;
    };
    /**
     * @return {?}
     */
    MdbStepComponent.prototype.reset = /**
     * @return {?}
     */
    function () {
        if (this.stepForm) {
            this.stepForm.reset();
        }
        this._removeClasses();
    };
    /**
     * @return {?}
     */
    MdbStepComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /** @nocollapse */
    MdbStepComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    MdbStepComponent.propDecorators = {
        content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],
        editable: [{ type: Input }],
        name: [{ type: Input }],
        label: [{ type: Input }],
        stepForm: [{ type: Input }]
    };
MdbStepComponent.ɵfac = function MdbStepComponent_Factory(t) { return new (t || MdbStepComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
MdbStepComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbStepComponent, selectors: [["mdb-step"]], viewQuery: function MdbStepComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);
    } }, inputs: { editable: "editable", name: "name", label: "label", stepForm: "stepForm" }, exportAs: ["mdbStep"], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MdbStepComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵtemplate(0, MdbStepComponent_ng_template_0_Template, 1, 0, "ng-template");
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdbStepComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-step',
                exportAs: 'mdbStep',
                template: '<ng-template><ng-content></ng-content></ng-template>',
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { editable: [{
            type: Input
        }], content: [{
            type: ViewChild,
            args: [TemplateRef, { static: true }]
        }], name: [{
            type: Input
        }], label: [{
            type: Input
        }], stepForm: [{
            type: Input
        }] }); })();
    return MdbStepComponent;
}());
export { MdbStepComponent };
if (false) {
    /** @type {?} */
    MdbStepComponent.prototype.content;
    /** @type {?} */
    MdbStepComponent.prototype.editable;
    /** @type {?} */
    MdbStepComponent.prototype.name;
    /** @type {?} */
    MdbStepComponent.prototype.label;
    /** @type {?} */
    MdbStepComponent.prototype.stepForm;
    /**
     * @type {?}
     * @private
     */
    MdbStepComponent.prototype._isDone;
    /**
     * @type {?}
     * @private
     */
    MdbStepComponent.prototype._isWrong;
    /**
     * @type {?}
     * @private
     */
    MdbStepComponent.prototype._isActive;
    /** @type {?} */
    MdbStepComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5nLXVpa2l0LXByby1zdGFuZGFyZC9saWIvcHJvL3N0ZXBwZXIvc3RlcC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLFNBQVMsRUFDVCxXQUFXLEVBQ1gsVUFBVSxFQUVWLHVCQUF1QixHQUN4QixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7Ozs7QUFFM0M7QUFFZSxJQVdiLDBCQUFtQixFQUFjO0FBQUksUUFBbEIsT0FBRSxHQUFGLEVBQUUsQ0FBWTtBQUFDLFFBTHpCLGFBQVEsR0FBRyxJQUFJLENBQUM7QUFDM0IsUUE0QlUsY0FBUyxHQUFHLEtBQUssQ0FBQztBQUM1QixJQXpCc0MsQ0FBQztBQUN2QyxJQUNFLHNCQUFJLG9DQUFNO0FBQUk7QUFDQTtBQUVOO0FBQVksUUFIcEI7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQztBQUN4QixRQUFFLENBQUM7QUFDRjtBQUFpQjtBQUNIO0FBRVA7QUFBWSxRQUhsQixVQUFXLEtBQWM7QUFDM0IsWUFBSSxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztBQUN6QixRQUFFLENBQUM7QUFDRjtBQUEwQjtBQUdwQixPQVBKO0FBQ0gsSUFLRSxzQkFBSSxxQ0FBTztBQUFJO0FBQ0Q7QUFFUDtBQUFZLFFBSG5CO0FBQWMsWUFDWixPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7QUFDekIsUUFBRSxDQUFDO0FBQ0Y7QUFBaUI7QUFDSjtBQUVSO0FBQVksUUFIaEIsVUFBWSxLQUFjO0FBQzVCLFlBQUksSUFBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7QUFDMUIsUUFBRSxDQUFDO0FBQ0Y7QUFBMEI7QUFHdEIsT0FQRjtBQUNILElBS0Usc0JBQUksc0NBQVE7QUFBSTtBQUNGO0FBRVI7QUFB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LEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUhBLEFBTUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUVBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFFQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBcERBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBWEEsQUFBQSxBQWFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQTBDQSxBQUFBLEFBQUEsQUFyREEsQUFxREEsQUEvQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBVUEsQUFBQSxBQVFBLEFBQUEsQUFRQSxBQUFBLEFBeEJBLEFBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBWaWV3Q2hpbGQsXG4gIFRlbXBsYXRlUmVmLFxuICBFbGVtZW50UmVmLFxuICBPbkluaXQsXG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbWRiLXN0ZXAnLFxuICBleHBvcnRBczogJ21kYlN0ZXAnLFxuICB0ZW1wbGF0ZTogJzxuZy10ZW1wbGF0ZT48bmctY29udGVudD48L25nLWNvbnRlbnQ+PC9uZy10ZW1wbGF0ZT4nLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgTWRiU3RlcENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBWaWV3Q2hpbGQoVGVtcGxhdGVSZWYsIHsgc3RhdGljOiB0cnVlIH0pIGNvbnRlbnQ6IFRlbXBsYXRlUmVmPGFueT47XG4gIEBJbnB1dCgpIGVkaXRhYmxlID0gdHJ1ZTtcbiAgQElucHV0KCkgbmFtZTogc3RyaW5nO1xuICBASW5wdXQoKSBsYWJlbDogc3RyaW5nO1xuICBASW5wdXQoKSBzdGVwRm9ybTogRm9ybUdyb3VwO1xuXG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBlbDogRWxlbWVudFJlZikge31cblxuICBnZXQgaXNEb25lKCkge1xuICAgIHJldHVybiB0aGlzLl9pc0RvbmU7XG4gIH1cbiAgc2V0IGlzRG9uZSh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2lzRG9uZSA9IHZhbHVlO1xuICB9XG4gIHByaXZhdGUgX2lzRG9uZTogYm9vbGVhbjtcblxuICBnZXQgaXNXcm9uZygpIHtcbiAgICByZXR1cm4gdGhpcy5faXNXcm9uZztcbiAgfVxuICBzZXQgaXNXcm9uZyh2YWx1ZTogYm9vbGVhbikge1xuICAgIHRoaXMuX2lzV3JvbmcgPSB2YWx1ZTtcbiAgfVxuICBwcml2YXRlIF9pc1dyb25nOiBib29sZWFuO1xuXG4gIGdldCBpc0FjdGl2ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5faXNBY3RpdmU7XG4gIH1cbiAgc2V0IGlzQWN0aXZlKHZhbHVlOiBib29sZWFuKSB7XG4gICAgdGhpcy5faXNBY3RpdmUgPSB2YWx1ZTtcbiAgfVxuICBwcml2YXRlIF9pc0FjdGl2ZSA9IGZhbHNlO1xuXG4gIHByaXZhdGUgX3JlbW92ZUNsYXNzZXMoKSB7XG4gICAgdGhpcy5pc0FjdGl2ZSA9IGZhbHNlO1xuICAgIHRoaXMuaXNEb25lID0gZmFsc2U7XG4gICAgdGhpcy5pc1dyb25nID0gZmFsc2U7XG4gIH1cblxuICByZXNldCgpIHtcbiAgICBpZiAodGhpcy5zdGVwRm9ybSkge1xuICAgICAgdGhpcy5zdGVwRm9ybS5yZXNldCgpO1xuICAgIH1cbiAgICB0aGlzLl9yZW1vdmVDbGFzc2VzKCk7XG4gIH1cblxuICBuZ09uSW5pdCgpIHt9XG59XG4iXX0=