/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ElementRef, Renderer2, ChangeDetectionStrategy } from '@angular/core';
import * as ɵngcc0 from '@angular/core';

var _c0 = ["*"];
var MdbCardHeaderComponent = /** @class */ (function () {
    function MdbCardHeaderComponent(_el, _r) {
        this._el = _el;
        this._r = _r;
    }
    /**
     * @return {?}
     */
    MdbCardHeaderComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this._r.addClass(this._el.nativeElement, 'card-header');
        if (this.class) {
            this.class.split(' ').forEach((/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                _this._r.addClass(_this._el.nativeElement, element);
            }));
        }
    };
    /** @nocollapse */
    MdbCardHeaderComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    MdbCardHeaderComponent.propDecorators = {
        class: [{ type: Input }]
    };
MdbCardHeaderComponent.ɵfac = function MdbCardHeaderComponent_Factory(t) { return new (t || MdbCardHeaderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
MdbCardHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MdbCardHeaderComponent, selectors: [["mdb-card-header"]], inputs: { class: "class" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function MdbCardHeaderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MdbCardHeaderComponent, [{
        type: Component,
        args: [{
                selector: 'mdb-card-header',
                template: "<ng-content></ng-content>",
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { class: [{
            type: Input
        }] }); })();
    return MdbCardHeaderComponent;
}());
export { MdbCardHeaderComponent };
if (false) {
    /** @type {?} */
    MdbCardHeaderComponent.prototype.class;
    /**
     * @type {?}
     * @private
     */
    MdbCardHeaderComponent.prototype._el;
    /**
     * @type {?}
     * @private
     */
    MdbCardHeaderComponent.prototype._r;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWRiLWNhcmQtaGVhZGVyLmNvbXBvbmVudC5qcyIsInNvdXJjZXMiOlsibmctdWlraXQtcHJvLXN0YW5kYXJkL2xpYi9mcmVlL2NhcmRzL21kYi1jYXJkLWhlYWRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLFVBQVUsRUFBRSxTQUFTLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7QUFFekc7QUFFWSxJQU1SLGdDQUFvQixHQUFlLEVBQVUsRUFBYTtBQUFJLFFBQTFDLFFBQUcsR0FBSCxHQUFHLENBQVk7QUFBQyxRQUFTLE9BQUUsR0FBRixFQUFFLENBQVc7QUFBQyxJQUFHLENBQUM7QUFDbkU7QUFDTztBQUNFO0FBQVEsSUFEYix5Q0FBUTtBQUNWO0FBQW1CO0FBQVEsSUFEekI7QUFDSCxRQURHLGlCQU9DO0FBQ0wsUUFQUSxJQUFJLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLGFBQWEsRUFBRSxhQUFhLENBQUMsQ0FBQztBQUNoRSxRQUFRLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtBQUN4QixZQUFZLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU87QUFBTTtBQUM1QjtBQUEyQjtBQUFnQixZQURwQixVQUFDLE9BQVk7QUFBSSxnQkFDM0MsS0FBSSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsS0FBSSxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDbEUsWUFBWSxDQUFDLEVBQUMsQ0FBQztBQUNmLFNBQVM7QUFDVCxJQUFJLENBQUMsQ0FYRTtBQUFDO21DQU5QLFNBQVMsU0FBQyxyREFNb0I7UUFMM0IsUUFBUSxFQUFFLGxCQU9BLGdCQVZxQixVQUFVO0tBR2Qsc0JBQzNCLDNCQUo2QyxnQkFBRixTQUFTO0FBQUc7MEJBSVIsMUJBSmtCO0VBS2pFLGVBQWUsRUFBRSxuQkFIYix3QkFPSCxLQUFLO0FBQUk7RUFKOEIsQ0FBQyxNQUFNLGtCQUNsRDs7Ozs7Ozs7Ozs7Ozs7b0JBR21CO0FBQUMsSUFXckIsNkJBQUM7QUFDQSxDQURBLEFBbEJELElBa0JDO0FBQ0QsU0FiYSxzQkFBc0I7QUFBSTtBQUFhO0FBQ25DLElBQWIsdUNBQXVCO0FBQzNCO0FBQVE7QUFBaUI7QUFBZ0I7QUFBUSxJQUFqQyxxQ0FBdUI7QUFBQztBQUFRO0FBQWlCO0FBRXJEO0FBQ1QsSUFIc0Msb0NBQXFCOztBQVZBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFRQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBRUEsQUFBQSxBQUFBLEFBQUEsQUFPQSxBQU5BLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFqQkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFOQSxBQUFBLEFBQUEsQUFBQSxBQVNBLEFBQUEsQUFXQSxBQUFBLEFBQUEsQUFsQkEsQUFrQkEsQUFaQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBFbGVtZW50UmVmLCBSZW5kZXJlcjIsIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnbWRiLWNhcmQtaGVhZGVyJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vbWRiLWNhcmQtaGVhZGVyLmNvbXBvbmVudC5odG1sJyxcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxufSlcblxuZXhwb3J0IGNsYXNzIE1kYkNhcmRIZWFkZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIEBJbnB1dCgpIGNsYXNzOiBzdHJpbmc7XG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBfZWw6IEVsZW1lbnRSZWYsIHByaXZhdGUgX3I6IFJlbmRlcmVyMikgeyB9XG5cbiAgICBuZ09uSW5pdCgpIHtcbiAgICAgICAgdGhpcy5fci5hZGRDbGFzcyh0aGlzLl9lbC5uYXRpdmVFbGVtZW50LCAnY2FyZC1oZWFkZXInKTtcbiAgICAgICAgaWYgKHRoaXMuY2xhc3MpIHtcbiAgICAgICAgICAgIHRoaXMuY2xhc3Muc3BsaXQoJyAnKS5mb3JFYWNoKChlbGVtZW50OiBhbnkpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLl9yLmFkZENsYXNzKHRoaXMuX2VsLm5hdGl2ZUVsZW1lbnQsIGVsZW1lbnQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXX0=