{"version":3,"file":"stepper.component.d.ts","sources":["stepper.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { QueryList, AfterContentInit, ElementRef, AfterViewInit, Renderer2, AfterContentChecked, EventEmitter, OnDestroy, ChangeDetectorRef } from '@angular/core';\r\nimport { MdbStepComponent } from './step.component';\r\nimport { WavesDirective } from '../../free/waves/waves-effect.directive';\r\nimport { Observable, Subject } from 'rxjs';\r\nexport declare class StepChangeEvent {\r\n    activeStep: MdbStepComponent;\r\n    activeStepIndex: number;\r\n    previousStep: MdbStepComponent;\r\n    previousStepIndex: number;\r\n}\r\nexport declare class MdbStepperComponent implements AfterContentInit, AfterViewInit, AfterContentChecked, OnDestroy {\r\n    ripple: WavesDirective;\r\n    private _renderer;\r\n    private _cdRef;\r\n    steps: QueryList<MdbStepComponent>;\r\n    stepTitles: QueryList<ElementRef>;\r\n    stepContents: QueryList<ElementRef>;\r\n    container: ElementRef;\r\n    linear: boolean;\r\n    disableWaves: boolean;\r\n    vertical: boolean;\r\n    private _vertical;\r\n    stepChange: EventEmitter<StepChangeEvent>;\r\n    constructor(ripple: WavesDirective, _renderer: Renderer2, _cdRef: ChangeDetectorRef, platformId: string);\r\n    private _destroy;\r\n    isBrowser: boolean;\r\n    horizontal: boolean;\r\n    activeStepIndex: number;\r\n    private _activeStepIndex;\r\n    private _activeStep;\r\n    private stepTextContent;\r\n    stepChangeSubject: Subject<any>;\r\n    stepChange$: Observable<any>;\r\n    getStepChange$(): Observable<any>;\r\n    onClick(index: number, event: any): void;\r\n    private _isStepValid;\r\n    getAnimationState(index: number): string;\r\n    private _getStepByIndex;\r\n    next(): void;\r\n    previous(): void;\r\n    submit(): void;\r\n    setNewActiveStep(index: number): void;\r\n    private _markCurrentAsDone;\r\n    private _markCurrentAsWrong;\r\n    private _markStepControlsAsDirty;\r\n    private _removeStepValidationClasses;\r\n    private _isNewStepLinear;\r\n    private _setActiveStep;\r\n    private _removeCurrentActiveStep;\r\n    resetAll(): void;\r\n    private _updateHorizontalStepperHeight;\r\n    private _initStepperVariation;\r\n    ngAfterViewInit(): void;\r\n    ngAfterContentInit(): void;\r\n    ngAfterContentChecked(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}