{"version":3,"file":"datepicker.component.d.ts","sources":["datepicker.component.d.ts"],"names":[],"mappingssourcesContent":["import { IMyLocales } from './interfaces/locale.interface';\r\nimport { EventEmitter, OnChanges, SimpleChanges, ElementRef, Renderer2, AfterViewInit, ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { IMyDate, IMyMonth, IMyWeek, IMyInputFieldChanged, IMyCalendarViewChanged, IMyInputFocusBlur, IMyOptions } from './interfaces/index';\r\nimport { LocaleService } from './services/datepickerLocale.service';\r\nimport { UtilService } from './services/datepickerUtil.service';\r\nexport declare const MYDP_VALUE_ACCESSOR: any;\r\nexport declare class MDBDatePickerComponent implements OnChanges, ControlValueAccessor, AfterViewInit {\r\n    elem: ElementRef;\r\n    private renderer;\r\n    private localeService;\r\n    private utilService;\r\n    private cdRef;\r\n    private _globalOptions;\r\n    private document;\r\n    tabIndex: any;\r\n    options: any;\r\n    locale: string;\r\n    defaultMonth: string;\r\n    selDate: string;\r\n    label: string;\r\n    placeholder: string;\r\n    selector: number;\r\n    disabled: boolean;\r\n    openOnFocus: boolean;\r\n    outlineInput: boolean;\r\n    inline: boolean;\r\n    inlineIcon: string;\r\n    id: string;\r\n    private _id;\r\n    dateChanged: EventEmitter<any>;\r\n    inputFieldChanged: EventEmitter<IMyInputFieldChanged>;\r\n    calendarViewChanged: EventEmitter<IMyCalendarViewChanged>;\r\n    calendarToggle: EventEmitter<number>;\r\n    inputFocusBlur: EventEmitter<IMyInputFocusBlur>;\r\n    closeButtonClicked: EventEmitter<MDBDatePickerComponent>;\r\n    clearButtonClicked: EventEmitter<MDBDatePickerComponent>;\r\n    todayButtonClicked: EventEmitter<MDBDatePickerComponent>;\r\n    divFocus: any;\r\n    inlineInput: any;\r\n    inlineIconToggle: any;\r\n    pickerFrame: ElementRef;\r\n    isDateSelected: boolean;\r\n    labelActive: boolean;\r\n    showSelector: boolean;\r\n    visibleMonth: IMyMonth;\r\n    selectedMonth: IMyMonth;\r\n    selectedDate: IMyDate;\r\n    weekDays: Array<string>;\r\n    dates: Array<IMyWeek>;\r\n    selectionDayTxt: string;\r\n    invalidDate: boolean;\r\n    disableTodayBtn: boolean;\r\n    dayIdx: number;\r\n    weekDayOpts: Array<string>;\r\n    editMonth: boolean;\r\n    invalidMonth: boolean;\r\n    editYear: boolean;\r\n    invalidYear: boolean;\r\n    prevMonthDisabled: boolean;\r\n    nextMonthDisabled: boolean;\r\n    prevYearDisabled: boolean;\r\n    nextYearDisabled: boolean;\r\n    prevMonthId: number;\r\n    currMonthId: number;\r\n    nextMonthId: number;\r\n    private _uid;\r\n    isOpen: boolean;\r\n    isDisabled: boolean;\r\n    tmp: IMyDate;\r\n    opts: any;\r\n    months: any;\r\n    years: any;\r\n    elementNumber: any;\r\n    firstTimeOpenedModal: boolean;\r\n    modalHeightBefore: any;\r\n    isMobile: any;\r\n    isBrowser: any;\r\n    documentClickFun: Function;\r\n    constructor(elem: ElementRef, renderer: Renderer2, localeService: LocaleService, utilService: UtilService, cdRef: ChangeDetectorRef, _globalOptions: IMyOptions, document: any, platformId: string);\r\n    ngAfterViewInit(): void;\r\n    ChangeZIndex(): void;\r\n    onChangeCb: (_: any) => void;\r\n    onTouchedCb: () => void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    setDisabled(isDisabled: boolean): void;\r\n    removeInlineStyle(): void;\r\n    setLocaleOptions(): void;\r\n    addLocale(locale: IMyLocales): void;\r\n    setOptions(): void;\r\n    resetMonthYearEdit(): void;\r\n    onUserDateInput(value: string): void;\r\n    onFocusInput(event: any): void;\r\n    onBlurInput(event: any): void;\r\n    onUserMonthInput(value: string): void;\r\n    onUserYearInput(value: string): void;\r\n    isTodayDisabled(): void;\r\n    parseOptions(): void;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: any): void;\r\n    registerOnTouched(fn: any): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    hideKeyboard(): void;\r\n    removeBtnClicked(): void;\r\n    closeBtnClicked(): void;\r\n    openBtnClicked(): void;\r\n    setVisibleMonth(): void;\r\n    monthList(): void;\r\n    yearsList(): void;\r\n    prevMonth(event?: any): void;\r\n    nextMonth(event?: any): void;\r\n    prevYear(): void;\r\n    nextYear(): void;\r\n    todayClicked(): void;\r\n    cellClicked(cell: any): void;\r\n    cellKeyDown(event: any, cell: any): void;\r\n    clearDate(): void;\r\n    selectDate(date: IMyDate): void;\r\n    updateDateValue(date: IMyDate, clear: boolean): void;\r\n    getDateModel(date: IMyDate): any;\r\n    preZero(val: string): string;\r\n    formatDate(val: any): string;\r\n    monthText(m: number): string;\r\n    weekText(m: string): string;\r\n    getMonthShort(m: number): string;\r\n    getMonthFull(m: number): string;\r\n    monthStartIdx(y: number, m: number): number;\r\n    daysInMonth(m: number, y: number): number;\r\n    daysInPrevMonth(m: number, y: number): number;\r\n    isCurrDay(d: number, m: number, y: number, cmo: number, today: IMyDate): boolean;\r\n    getToday(): IMyDate;\r\n    getTimeInMilliseconds(date: IMyDate): number;\r\n    getWeekday(date: IMyDate): string;\r\n    getDate(year: number, month: number, day: number): Date;\r\n    sundayIdx(): number;\r\n    generateCalendar(m: number, y: number, notifyChange: boolean): void;\r\n    parseSelectedDate(selDate: any): IMyDate;\r\n    parseSelectedMonth(ms: string): IMyMonth;\r\n    setHeaderBtnDisabledState(m: number, y: number): void;\r\n    checkActive(): boolean;\r\n    toggleInlineDatePicker(): void;\r\n}\r\n"]}