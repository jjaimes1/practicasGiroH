{"version":3,"file":"datepickerUtil.service.d.ts","sources":["datepickerUtil.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IMyDate } from '../interfaces/date.interface';\r\nimport { IMyDateRange } from '../interfaces/dateRange.interface';\r\nimport { IMyMonth } from '../interfaces/month.interface';\r\nimport { IMyMonthLabels } from '../interfaces/monthLabels.interface';\r\nimport { IMyMarkedDates } from '../interfaces/markedDates.interface';\r\nimport { IMyMarkedDate } from '../interfaces/markedDate.interface';\r\nimport { IMyDateFormat } from '../interfaces/my-date-format.interface';\r\nexport declare class UtilService {\r\n    isDateValid(dateStr: string, dateFormat: string, minYear: number, maxYear: number, disableUntil: IMyDate, disableSince: IMyDate, disableWeekends: boolean, disableDays: Array<IMyDate | number>, disableDateRanges: Array<IMyDateRange>, monthLabels: IMyMonthLabels, enableDays: Array<IMyDate | number>): IMyDate;\r\n    getDateValue(dateStr: string, dateFormat: string, delimeters: Array<string>): Array<IMyDateFormat>;\r\n    getMonthNumberByMonthName(df: IMyDateFormat, monthLabels: IMyMonthLabels): number;\r\n    getNumberByValue(df: IMyDateFormat): number;\r\n    getDateFormatSeparator(dateFormat: string): string;\r\n    getDateFormatDelimeters(dateFormat: string): Array<string> | any;\r\n    isMonthLabelValid(monthLabel: string, monthLabels: IMyMonthLabels): number;\r\n    isYearLabelValid(yearLabel: number, minYear: number, maxYear: number): number;\r\n    parseDatePartNumber(dateFormat: string, dateString: string, datePart: string): number;\r\n    parseDatePartMonthName(dateFormat: string, dateString: string, datePart: string, monthLabels: IMyMonthLabels): number;\r\n    getDatePartIndex(dateFormat: string, datePart: string): number;\r\n    parseDefaultMonth(monthString: string | any): IMyMonth;\r\n    isDisabledDay(date: IMyDate, disableUntil: IMyDate, disableSince: IMyDate, disableWeekends: boolean, disableDays: Array<IMyDate | number>, disableDateRanges: Array<IMyDateRange>, enableDays: Array<IMyDate | number>): boolean;\r\n    isMarkedDate(date: IMyDate, markedDates: Array<IMyMarkedDates>, markWeekends: IMyMarkedDate): IMyMarkedDate;\r\n    getWeekNumber(date: IMyDate): number;\r\n    isMonthDisabledByDisableUntil(date: IMyDate, disableUntil: IMyDate): boolean;\r\n    isMonthDisabledByDisableSince(date: IMyDate, disableSince: IMyDate): boolean;\r\n    isInitializedDate(date: IMyDate): boolean;\r\n    getTimeInMilliseconds(date: IMyDate): number;\r\n    getDayNumber(date: IMyDate): number;\r\n}\r\n"]}