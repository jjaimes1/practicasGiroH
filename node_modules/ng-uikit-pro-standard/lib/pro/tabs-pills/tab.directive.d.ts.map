{"version":3,"file":"tab.directive.d.ts","sources":["tab.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, TemplateRef, ElementRef, OnInit, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { TabsetComponent } from './tabset.component';\r\nexport declare class TabDirective implements OnInit, OnDestroy {\r\n    tabset: TabsetComponent;\r\n    el: ElementRef;\r\n    private renderer;\r\n    type: string;\r\n    /** tab header text */\r\n    heading: string;\r\n    /** if true tab can not be activated */\r\n    disabled: boolean;\r\n    private _disabled;\r\n    /** if true tab can be removable, additional button will appear */\r\n    removable: boolean;\r\n    /** if set, will be added to the tab's class atribute */\r\n    customClass: string;\r\n    tabOrder: number;\r\n    /** tab active state toggle */\r\n    active: boolean;\r\n    /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\r\n    select: EventEmitter<TabDirective>;\r\n    /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\r\n    deselect: EventEmitter<TabDirective>;\r\n    /** fired before tab will be removed */\r\n    removed: EventEmitter<TabDirective>;\r\n    addClass: boolean;\r\n    test: boolean;\r\n    headingRef: TemplateRef<any>;\r\n    private _active;\r\n    isBrowser: any;\r\n    constructor(platformId: string, tabset: TabsetComponent, el: ElementRef, renderer: Renderer2);\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}