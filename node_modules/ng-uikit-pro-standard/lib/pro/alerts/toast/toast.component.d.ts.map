{"version":3,"file":"toast.component.d.ts","sources":["toast.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ApplicationRef, OnDestroy } from '@angular/core';\r\nimport { SafeHtml } from '@angular/platform-browser';\r\nimport { Subscription } from 'rxjs';\r\nimport { GlobalConfig, ToastPackage } from './toast.config';\r\nexport declare class ToastComponent implements OnDestroy {\r\n    toastPackage: ToastPackage;\r\n    protected appRef: ApplicationRef;\r\n    message: string | SafeHtml;\r\n    title: string;\r\n    options: GlobalConfig;\r\n    /** width of progress bar */\r\n    width: number;\r\n    state: string;\r\n    /** a combination of toast type and options.toastClass */\r\n    toastClasses: string;\r\n    /** controls animation */\r\n    readonly animationParams: {\r\n        value: string;\r\n        params: {\r\n            opacity: number | undefined;\r\n        };\r\n    };\r\n    opacity: number | undefined;\r\n    timeout: any;\r\n    intervalId: any;\r\n    hideTime: number;\r\n    sub: Subscription;\r\n    sub1: Subscription;\r\n    protected toastService: any;\r\n    constructor(toastPackage: ToastPackage, appRef: ApplicationRef);\r\n    ngOnDestroy(): void;\r\n    /**\r\n     * activates toast and sets timeout\r\n     */\r\n    activateToast(): void;\r\n    /**\r\n     * updates progress bar width\r\n     */\r\n    updateProgress(): void;\r\n    /**\r\n     * tells toastrService to remove this toast after animation time\r\n     */\r\n    remove(): void;\r\n    onActionClick(): void;\r\n    tapToast(): void;\r\n    stickAround(): void;\r\n    delayedHideToast(): void;\r\n}\r\n"]}