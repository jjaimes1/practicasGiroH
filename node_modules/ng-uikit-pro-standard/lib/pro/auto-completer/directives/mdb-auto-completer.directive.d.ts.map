{"version":3,"file":"mdb-auto-completer.directive.d.ts","sources":["mdb-auto-completer.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ElementRef, EventEmitter, OnDestroy, Renderer2 } from '@angular/core';\r\nimport { MdbAutoCompleterComponent } from '../components/mdb-auto-completer.component';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nexport declare const MAT_AUTOCOMPLETE_VALUE_ACCESSOR: any;\r\nexport declare class MdbAutoCompleterDirective implements AfterViewInit, OnDestroy, ControlValueAccessor {\r\n    private renderer;\r\n    private el;\r\n    private document;\r\n    mdbAutoCompleter: MdbAutoCompleterComponent;\r\n    ngModelChange: EventEmitter<any>;\r\n    clearBtnClicked: EventEmitter<any>;\r\n    private _destroy$;\r\n    private _autocompleterInputChanges;\r\n    private _clearButton;\r\n    private _canOpenOnFocus;\r\n    private utils;\r\n    listenToClearClick: Function;\r\n    listenFunc: Function;\r\n    isBrowser: boolean;\r\n    onKeydown(event: any): void;\r\n    _handleInput(event: any): void;\r\n    _handleFocusIn(): void;\r\n    _handleBlurIn(): void;\r\n    handleMouseDown(): void;\r\n    constructor(renderer: Renderer2, el: ElementRef, platformId: string, document: any);\r\n    private _renderClearButton;\r\n    private _updateClearButtonVisibility;\r\n    private _setStyles;\r\n    private _addClass;\r\n    private _clearInput;\r\n    clear(): void;\r\n    _handleKeyDown(event: any): void;\r\n    getCoords(elem: any): any;\r\n    private _isOpen;\r\n    private _show;\r\n    private _hide;\r\n    private _appendDropdownToInput;\r\n    ngAfterViewInit(): void;\r\n    ngOnDestroy(): void;\r\n    _onChange: (value: any) => void;\r\n    _onTouched: () => void;\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: (value: any) => {}): void;\r\n    registerOnTouched(fn: () => {}): void;\r\n}\r\n"]}