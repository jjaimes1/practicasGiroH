{"version":3,"file":"select.component.d.ts","sources":["select.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnChanges, OnInit, EventEmitter, ExistingProvider, ElementRef, Renderer2, AfterViewInit, SimpleChanges, ChangeDetectorRef } from '@angular/core';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { IOption } from './option-interface';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\nexport declare const SELECT_VALUE_ACCESSOR: ExistingProvider;\r\nexport declare class SelectComponent implements ControlValueAccessor, OnChanges, OnInit, AfterViewInit {\r\n    el: ElementRef;\r\n    renderer: Renderer2;\r\n    private document;\r\n    private cdRef;\r\n    options: Array<IOption>;\r\n    customClass: string;\r\n    allowClear: boolean;\r\n    disabled: boolean;\r\n    highlightColor: string;\r\n    highlightTextColor: string;\r\n    highlightFirst: boolean;\r\n    multiple: boolean;\r\n    noFilter: number;\r\n    notFoundMsg: string;\r\n    placeholder: string;\r\n    filterPlaceholder: string;\r\n    label: string;\r\n    filterEnabled: boolean;\r\n    filterAutocomplete: boolean;\r\n    visibleOptions: number;\r\n    optionHeight: number;\r\n    tabindex: number;\r\n    enableSelectAll: boolean;\r\n    appendToBody: boolean;\r\n    selectAllLabel: string;\r\n    outline: boolean;\r\n    required: boolean;\r\n    private _required;\r\n    compareWith: (o1: any, o2: any) => boolean;\r\n    opened: EventEmitter<any>;\r\n    closed: EventEmitter<any>;\r\n    selected: EventEmitter<IOption>;\r\n    deselected: EventEmitter<IOption | IOption[]>;\r\n    noOptionsFound: EventEmitter<string>;\r\n    changed: EventEmitter<{}>;\r\n    selectionSpan: ElementRef;\r\n    dropdown: SelectDropdownComponent;\r\n    filterInput: ElementRef;\r\n    clearButton: ElementRef;\r\n    singleContainer: ElementRef;\r\n    multipleContainer: ElementRef;\r\n    _value: Array<any>;\r\n    optionList: OptionList;\r\n    optionsLength: number;\r\n    visibleOptionsDefault: number;\r\n    hasSelected: boolean;\r\n    isBrowser: boolean;\r\n    canOpenOnFocus: boolean;\r\n    hasFocus: boolean;\r\n    isOpen: boolean;\r\n    isBelow: boolean;\r\n    filterInputWidth: number;\r\n    isDisabled: boolean;\r\n    placeholderView: string;\r\n    labelActive: boolean;\r\n    labelRef: HTMLElement;\r\n    prefixRef: HTMLElement;\r\n    labelRefActive: boolean;\r\n    dropdownAnimationDone: boolean;\r\n    clearClicked: boolean;\r\n    selectContainerClicked: boolean;\r\n    filterHeight: number;\r\n    dropdownHeight: number;\r\n    dropdownMaxHeight: number;\r\n    OUTLINE_DROPDOWN_BOTTOM_OFFSET: number;\r\n    OUTLINE_DROPDOWN_TOP_OFFSET: number;\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n    documentClickFun: Function;\r\n    itemsBefore: Array<any>;\r\n    readonly focused: boolean;\r\n    private _focused;\r\n    onChange: (_: any) => void;\r\n    onTouched: () => void;\r\n    private _compareWith;\r\n    constructor(el: ElementRef, renderer: Renderer2, document: any, platformId: string, cdRef: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    private _getLabelRef;\r\n    private _getPrefixRef;\r\n    updateFilterHeight(): void;\r\n    updateDropdownHeight(): void;\r\n    onDropdownAnimationDone(): void;\r\n    onDropdownAnimationStart(): void;\r\n    ngAfterViewInit(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    isChild(elemnt: any): boolean;\r\n    onWindowResize(): void;\r\n    onSelectContainerClick(event: any): false | undefined;\r\n    onSelectContainerFocus(): void;\r\n    onSelectContainerBlur(): void;\r\n    onSelectContainerKeydown(event: any): void;\r\n    onDropdownOptionClicked(option: Option): void;\r\n    onDropdownClose(focus: any): void;\r\n    onSingleFilterClick(): void;\r\n    onSingleFilterInput(term: string): void;\r\n    onSingleFilterKeydown(event: any): void;\r\n    onMultipleFilterInput(event: any): void;\r\n    onMultipleFilterKeydown(event: any): void;\r\n    onClearSelectionClick(event: any): void;\r\n    onDeselectOptionClick(option: Option): void;\r\n    /** API. **/\r\n    open(): void;\r\n    close(): void;\r\n    value: any | any[];\r\n    private _setSelection;\r\n    private _selectByValue;\r\n    clear(): void;\r\n    select(value: string): void;\r\n    /** ControlValueAccessor interface methods. **/\r\n    writeValue(value: any): void;\r\n    registerOnChange(fn: (_: any) => void): void;\r\n    registerOnTouched(fn: () => void): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    valueChanged(): void;\r\n    updateState(): void;\r\n    /** Initialization. **/\r\n    updateOptionsList(options: Array<IOption>): void;\r\n    updateLabelState(): void;\r\n    updateLabelRefState(): void;\r\n    /** Dropdown. **/\r\n    toggleDropdown(): void;\r\n    openDropdown(): void;\r\n    closeDropdown(focus?: boolean): void;\r\n    /** Select. **/\r\n    selectOption(option: Option): void;\r\n    deselectOption(option: Option): void;\r\n    clearSelection(): void;\r\n    toggleSelectOption(option: Option): void;\r\n    selectHighlightedOption(): void;\r\n    deselectLast(): void;\r\n    onSelectAll(isSelected: boolean): void;\r\n    /** Filter. **/\r\n    clearFilterInput(): void;\r\n    setMultipleFilterInput(value: string): void;\r\n    handleSelectContainerKeydown(event: any): void;\r\n    handleMultipleFilterKeydown(event: any): void;\r\n    handleSingleFilterKeydown(event: any): void;\r\n    /** View. **/\r\n    focus(): void;\r\n    blur(): void;\r\n    updateWidth(): void;\r\n    updatePosition(): void;\r\n    private _updateAppendedPosition;\r\n    private _appendDropdown;\r\n    updateFilterWidth(): void;\r\n}\r\n"]}