{"version":3,"file":"modal.directive.d.ts","sources":["modal.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ComponentRef, ElementRef, EventEmitter, OnDestroy, OnChanges, Renderer2, ViewContainerRef } from '@angular/core';\r\nimport { Utils } from '../utils/utils.class';\r\nimport { ModalBackdropComponent } from './modalBackdrop.component';\r\nimport { ModalOptions } from './modal.options';\r\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\r\n/** Mark any code with directive to show it's content in modal */\r\nexport declare class ModalDirective implements AfterViewInit, OnDestroy, OnChanges {\r\n    protected _element: ElementRef;\r\n    protected _renderer: Renderer2;\r\n    /** allows to set modal configuration via element property */\r\n    config: ModalOptions | any;\r\n    /** This event fires immediately when the `show` instance method is called. */\r\n    onShow: EventEmitter<ModalDirective>;\r\n    open: EventEmitter<ModalDirective>;\r\n    /** This event is fired when the modal has been made visible to the user (will wait for CSS transitions to complete) */\r\n    onShown: EventEmitter<ModalDirective>;\r\n    opened: EventEmitter<ModalDirective>;\r\n    /** This event is fired immediately when the hide instance method has been called. */\r\n    onHide: EventEmitter<ModalDirective>;\r\n    close: EventEmitter<ModalDirective>;\r\n    /** This event is fired when the modal has finished being hidden from the user (will wait for CSS transitions to complete). */\r\n    onHidden: EventEmitter<ModalDirective>;\r\n    closed: EventEmitter<ModalDirective>;\r\n    isAnimated: boolean;\r\n    /** This field contains last dismiss reason.\r\n     Possible values: `backdrop-click`, `esc` and `null` (if modal was closed by direct call of `.hide()`). */\r\n    dismissReason: string | any;\r\n    readonly isShown: boolean;\r\n    protected _config: ModalOptions | any;\r\n    protected _isShown: boolean;\r\n    protected isBodyOverflowing: boolean;\r\n    protected originalBodyPadding: number;\r\n    protected scrollbarWidth: number;\r\n    protected timerHideModal: any;\r\n    protected timerRmBackDrop: any;\r\n    protected backdrop: ComponentRef<ModalBackdropComponent> | undefined;\r\n    private _backdrop;\r\n    _dialog: any;\r\n    isNested: boolean;\r\n    utils: Utils;\r\n    onKeyDown(event: any): void;\r\n    onClick(event: any): void;\r\n    onEsc(): void;\r\n    constructor(_element: ElementRef, _viewContainerRef: ViewContainerRef, _renderer: Renderer2, clf: ComponentLoaderFactory);\r\n    ngOnDestroy(): any;\r\n    ngAfterViewInit(): any;\r\n    ngOnChanges(): any;\r\n    /** Allows to manually toggle modal visibility */\r\n    toggle(): void;\r\n    /** Allows to manually open modal */\r\n    show(): void;\r\n    /** Allows to manually close modal */\r\n    hide(event?: Event): void;\r\n    /** Private methods @internal */\r\n    protected getConfig(config?: ModalOptions): ModalOptions;\r\n    /**\r\n     *  Show dialog\r\n     *  @internal\r\n     */\r\n    protected showElement(): void;\r\n    /** @internal */\r\n    protected hideModal(): void;\r\n    /** @internal */\r\n    protected showBackdrop(callback?: Function): void;\r\n    /** @internal */\r\n    protected removeBackdrop(): void;\r\n    protected focusOtherModal(): void;\r\n    /** @internal */\r\n    protected resetAdjustments(): void;\r\n    /** Scroll bar tricks */\r\n    /** @internal */\r\n    protected checkScrollbar(): void;\r\n    protected setScrollbar(): void;\r\n    protected getScrollbarWidth(): number;\r\n}\r\n"]}