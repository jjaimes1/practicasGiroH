{"version":3,"file":"positioning.service.d.ts","sources":["positioning.service.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, RendererFactory2, NgZone } from '@angular/core';\r\nimport { Options } from './models/index';\r\nexport interface PositioningOptions {\r\n    /** The DOM element, ElementRef, or a selector string of an element which will be moved */\r\n    element?: any;\r\n    /** The DOM element, ElementRef, or a selector string of an element which the element will be attached to  */\r\n    target?: any;\r\n    /**\r\n     * A string of the form 'vert-attachment horiz-attachment' or 'placement'\r\n     * - placement can be \"top\", \"bottom\", \"left\", \"right\"\r\n     * not yet supported:\r\n     * - vert-attachment can be any of 'top', 'middle', 'bottom'\r\n     * - horiz-attachment can be any of 'left', 'center', 'right'\r\n     */\r\n    attachment?: any;\r\n    /** A string similar to `attachment`. The one difference is that, if it's not provided,\r\n     * `targetAttachment` will assume the mirror image of `attachment`.\r\n     */\r\n    targetAttachment?: string;\r\n    /** A string of the form 'vert-offset horiz-offset'\r\n     * - vert-offset and horiz-offset can be of the form \"20px\" or \"55%\"\r\n     */\r\n    offset?: string;\r\n    /** A string similar to `offset`, but referring to the offset of the target */\r\n    targetOffset?: string;\r\n    /** If true component will be attached to body */\r\n    appendToBody?: boolean;\r\n}\r\nexport declare class PositioningService {\r\n    private _ngZone;\r\n    options: Options;\r\n    private update$$;\r\n    private positionElements;\r\n    constructor(rendererFactory: RendererFactory2, platformId: number, _ngZone: NgZone);\r\n    position(options: PositioningOptions): void;\r\n    addPositionElement(options: PositioningOptions): void;\r\n    calcPosition(): void;\r\n    deletePositionElement(elRef: ElementRef): void;\r\n    setOptions(options: Options): void;\r\n}\r\n"]}