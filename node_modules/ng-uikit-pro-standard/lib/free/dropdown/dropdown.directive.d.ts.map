{"version":3,"file":"dropdown.directive.d.ts","sources":["dropdown.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EmbeddedViewRef, EventEmitter, OnDestroy, OnInit, Renderer2, ViewContainerRef, ChangeDetectorRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ComponentLoader } from '../utils/component-loader/component-loader.class';\r\nimport { ComponentLoaderFactory } from '../utils/component-loader/component-loader.factory';\r\nimport { BsDropdownConfig } from './dropdown.config';\r\nimport { BsDropdownContainerComponent } from './dropdown-container.component';\r\nimport { BsDropdownState } from './dropdown.state';\r\nimport { BsDropdownMenuDirective } from './dropdown-menu.directive';\r\nexport declare class BsDropdownDirective implements OnInit, OnDestroy {\r\n    private _elementRef;\r\n    private _renderer;\r\n    private _viewContainerRef;\r\n    private _cis;\r\n    private _config;\r\n    private _state;\r\n    private cdRef;\r\n    /**\r\n     * Placement of a popover. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n     */\r\n    placement: string;\r\n    /**\r\n     * Specifies events that should trigger. Supports a space separated list of\r\n     * event names.\r\n     */\r\n    triggers: string;\r\n    /**\r\n     * A selector specifying the element the popover should be appended to.\r\n     * Currently only supports \"body\".\r\n     */\r\n    container: string;\r\n    dropup: boolean;\r\n    dropupDefault: boolean;\r\n    /**\r\n     * This attribute indicates that the dropdown should be opened upwards\r\n     */\r\n    readonly isDropup: true | undefined;\r\n    /**\r\n     * Indicates that dropdown will be closed on item or document click,\r\n     * and after pressing ESC\r\n     */\r\n    autoClose: boolean;\r\n    /**\r\n     * Disables dropdown toggle and hides dropdown menu if opened\r\n     */\r\n    isDisabled: boolean;\r\n    /**\r\n     * Returns whether or not the popover is currently being shown\r\n     */\r\n    isOpen: boolean;\r\n    /**\r\n     * Emits an event when isOpen change\r\n     */\r\n    isOpenChange: EventEmitter<any>;\r\n    /**\r\n     * Emits an event when the popover is shown\r\n     */\r\n    onShown: EventEmitter<any>;\r\n    shown: EventEmitter<any>;\r\n    /**\r\n     * Emits an event when the popover is hidden\r\n     */\r\n    onHidden: EventEmitter<any>;\r\n    hidden: EventEmitter<any>;\r\n    private _destroy$;\r\n    readonly isBs4: boolean;\r\n    _isInlineOpen: boolean;\r\n    _showInline: boolean;\r\n    _inlinedMenu: EmbeddedViewRef<BsDropdownMenuDirective>;\r\n    _isDisabled: boolean;\r\n    _dropdown: ComponentLoader<BsDropdownContainerComponent>;\r\n    _subscriptions: Subscription[];\r\n    _isInited: boolean;\r\n    _isDropupDefault: boolean;\r\n    constructor(_elementRef: ElementRef, _renderer: Renderer2, _viewContainerRef: ViewContainerRef, _cis: ComponentLoaderFactory, _config: BsDropdownConfig, _state: BsDropdownState, cdRef: ChangeDetectorRef);\r\n    ngOnInit(): void;\r\n    /**\r\n     * Opens an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\r\n    show(): void;\r\n    /**\r\n     * Closes an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\r\n    hide(): void;\r\n    /**\r\n     * Toggles an element’s popover. This is considered a “manual” triggering of\r\n     * the popover.\r\n     */\r\n    toggle(value?: boolean): void;\r\n    ngOnDestroy(): void;\r\n}\r\n"]}