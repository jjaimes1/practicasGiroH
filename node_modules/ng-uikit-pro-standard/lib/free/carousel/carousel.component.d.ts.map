{"version":3,"file":"carousel.component.d.ts","sources":["carousel.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnDestroy, QueryList, Renderer2 } from '@angular/core';\r\nimport { SlideComponent } from './slide.component';\r\nimport { CarouselConfig } from './carousel.config';\r\nexport declare enum Direction {\r\n    UNKNOWN = 0,\r\n    NEXT = 1,\r\n    PREV = 2\r\n}\r\n/**\r\n * Base element to create carousel\r\n */\r\nexport declare class CarouselComponent implements OnDestroy, AfterViewInit {\r\n    protected el: ElementRef;\r\n    private cdRef;\r\n    private renderer;\r\n    SWIPE_ACTION: {\r\n        LEFT: string;\r\n        RIGHT: string;\r\n    };\r\n    _slidesList: QueryList<SlideComponent>;\r\n    readonly slides: SlideComponent[];\r\n    private _destroy$;\r\n    protected currentInterval: any;\r\n    protected isPlaying: boolean;\r\n    protected destroyed: boolean;\r\n    protected animationEnd: boolean;\r\n    protected _currentActiveSlide: number;\r\n    protected carouselIndicators: any;\r\n    isBrowser: any;\r\n    noWrap: boolean;\r\n    noPause: boolean;\r\n    isControls: boolean;\r\n    keyboard: boolean;\r\n    class: String;\r\n    type: String;\r\n    animation: String;\r\n    activeSlideIndex: number;\r\n    activeSlideChange: EventEmitter<any>;\r\n    activeSlide: number;\r\n    protected _interval: number;\r\n    checkNavigation(): boolean;\r\n    checkDots(): boolean;\r\n    getImg(slide: any): any;\r\n    interval: number;\r\n    readonly isBs4: boolean;\r\n    constructor(config: CarouselConfig, el: ElementRef, platformId: string, cdRef: ChangeDetectorRef, renderer: Renderer2);\r\n    ngOnDestroy(): void;\r\n    ngAfterViewInit(): void;\r\n    swipe(action?: string): void;\r\n    nextSlide(force?: boolean): void;\r\n    previousSlide(force?: boolean): void;\r\n    protected fadeAnimation(goToIndex: number, direction?: any): void;\r\n    protected slideAnimation(goToIndex: number, direction: any): void;\r\n    selectSlide(index: number): void;\r\n    play(): void;\r\n    pause(): void;\r\n    getCurrentSlideIndex(): number;\r\n    isLast(index: number): boolean;\r\n    private findNextSlideIndex;\r\n    private _select;\r\n    private restartTimer;\r\n    private resetTimer;\r\n    protected hasClass(el: any, className: any): any;\r\n    protected classAdd(el: any, className: any): void;\r\n    protected removeClass(el: any, className: any): void;\r\n    keyboardControl(event: KeyboardEvent): void;\r\n    focus(): void;\r\n}\r\n"]}